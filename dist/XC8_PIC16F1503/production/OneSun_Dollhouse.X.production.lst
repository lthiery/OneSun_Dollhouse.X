

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sun Sep 25 08:16:17 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F1503
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	clrtext,global,class=CODE,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	intentry,global,class=CODE,delta=2
    24                           	dabs	1,0x7E,2
    25  0000                     	;# 
    26  0001                     	;# 
    27  0002                     	;# 
    28  0003                     	;# 
    29  0004                     	;# 
    30  0005                     	;# 
    31  0006                     	;# 
    32  0007                     	;# 
    33  0008                     	;# 
    34  0009                     	;# 
    35  000A                     	;# 
    36  000B                     	;# 
    37  000C                     	;# 
    38  000E                     	;# 
    39  0011                     	;# 
    40  0012                     	;# 
    41  0013                     	;# 
    42  0015                     	;# 
    43  0016                     	;# 
    44  0016                     	;# 
    45  0017                     	;# 
    46  0018                     	;# 
    47  0019                     	;# 
    48  001A                     	;# 
    49  001B                     	;# 
    50  001C                     	;# 
    51  008C                     	;# 
    52  008E                     	;# 
    53  0091                     	;# 
    54  0092                     	;# 
    55  0093                     	;# 
    56  0095                     	;# 
    57  0096                     	;# 
    58  0097                     	;# 
    59  0099                     	;# 
    60  009A                     	;# 
    61  009B                     	;# 
    62  009B                     	;# 
    63  009C                     	;# 
    64  009D                     	;# 
    65  009E                     	;# 
    66  009F                     	;# 
    67  010C                     	;# 
    68  010E                     	;# 
    69  0111                     	;# 
    70  0112                     	;# 
    71  0113                     	;# 
    72  0114                     	;# 
    73  0115                     	;# 
    74  0116                     	;# 
    75  0117                     	;# 
    76  0118                     	;# 
    77  0119                     	;# 
    78  011D                     	;# 
    79  018C                     	;# 
    80  018E                     	;# 
    81  0191                     	;# 
    82  0191                     	;# 
    83  0192                     	;# 
    84  0193                     	;# 
    85  0193                     	;# 
    86  0194                     	;# 
    87  0195                     	;# 
    88  0196                     	;# 
    89  0197                     	;# 
    90  020C                     	;# 
    91  0211                     	;# 
    92  0211                     	;# 
    93  0212                     	;# 
    94  0212                     	;# 
    95  0213                     	;# 
    96  0213                     	;# 
    97  0214                     	;# 
    98  0214                     	;# 
    99  0215                     	;# 
   100  0215                     	;# 
   101  0215                     	;# 
   102  0216                     	;# 
   103  0216                     	;# 
   104  0217                     	;# 
   105  0217                     	;# 
   106  0391                     	;# 
   107  0392                     	;# 
   108  0393                     	;# 
   109  0498                     	;# 
   110  0498                     	;# 
   111  0499                     	;# 
   112  049A                     	;# 
   113  049B                     	;# 
   114  049B                     	;# 
   115  049C                     	;# 
   116  049D                     	;# 
   117  049E                     	;# 
   118  049F                     	;# 
   119  0611                     	;# 
   120  0612                     	;# 
   121  0613                     	;# 
   122  0613                     	;# 
   123  0614                     	;# 
   124  0615                     	;# 
   125  0616                     	;# 
   126  0616                     	;# 
   127  0617                     	;# 
   128  0618                     	;# 
   129  0619                     	;# 
   130  0619                     	;# 
   131  061A                     	;# 
   132  061B                     	;# 
   133  061C                     	;# 
   134  061C                     	;# 
   135  0691                     	;# 
   136  0692                     	;# 
   137  0693                     	;# 
   138  0694                     	;# 
   139  0695                     	;# 
   140  0F0F                     	;# 
   141  0F10                     	;# 
   142  0F11                     	;# 
   143  0F12                     	;# 
   144  0F13                     	;# 
   145  0F14                     	;# 
   146  0F15                     	;# 
   147  0F16                     	;# 
   148  0F17                     	;# 
   149  0F18                     	;# 
   150  0F19                     	;# 
   151  0F1A                     	;# 
   152  0F1B                     	;# 
   153  0F1C                     	;# 
   154  0F1D                     	;# 
   155  0F1E                     	;# 
   156  0F1F                     	;# 
   157  0FE3                     	;# 
   158  0FE4                     	;# 
   159  0FE5                     	;# 
   160  0FE6                     	;# 
   161  0FE7                     	;# 
   162  0FE8                     	;# 
   163  0FE9                     	;# 
   164  0FEA                     	;# 
   165  0FEB                     	;# 
   166  0FED                     	;# 
   167  0FEE                     	;# 
   168  0FEF                     	;# 
   169  0000                     	;# 
   170  0001                     	;# 
   171  0002                     	;# 
   172  0003                     	;# 
   173  0004                     	;# 
   174  0005                     	;# 
   175  0006                     	;# 
   176  0007                     	;# 
   177  0008                     	;# 
   178  0009                     	;# 
   179  000A                     	;# 
   180  000B                     	;# 
   181  000C                     	;# 
   182  000E                     	;# 
   183  0011                     	;# 
   184  0012                     	;# 
   185  0013                     	;# 
   186  0015                     	;# 
   187  0016                     	;# 
   188  0016                     	;# 
   189  0017                     	;# 
   190  0018                     	;# 
   191  0019                     	;# 
   192  001A                     	;# 
   193  001B                     	;# 
   194  001C                     	;# 
   195  008C                     	;# 
   196  008E                     	;# 
   197  0091                     	;# 
   198  0092                     	;# 
   199  0093                     	;# 
   200  0095                     	;# 
   201  0096                     	;# 
   202  0097                     	;# 
   203  0099                     	;# 
   204  009A                     	;# 
   205  009B                     	;# 
   206  009B                     	;# 
   207  009C                     	;# 
   208  009D                     	;# 
   209  009E                     	;# 
   210  009F                     	;# 
   211  010C                     	;# 
   212  010E                     	;# 
   213  0111                     	;# 
   214  0112                     	;# 
   215  0113                     	;# 
   216  0114                     	;# 
   217  0115                     	;# 
   218  0116                     	;# 
   219  0117                     	;# 
   220  0118                     	;# 
   221  0119                     	;# 
   222  011D                     	;# 
   223  018C                     	;# 
   224  018E                     	;# 
   225  0191                     	;# 
   226  0191                     	;# 
   227  0192                     	;# 
   228  0193                     	;# 
   229  0193                     	;# 
   230  0194                     	;# 
   231  0195                     	;# 
   232  0196                     	;# 
   233  0197                     	;# 
   234  020C                     	;# 
   235  0211                     	;# 
   236  0211                     	;# 
   237  0212                     	;# 
   238  0212                     	;# 
   239  0213                     	;# 
   240  0213                     	;# 
   241  0214                     	;# 
   242  0214                     	;# 
   243  0215                     	;# 
   244  0215                     	;# 
   245  0215                     	;# 
   246  0216                     	;# 
   247  0216                     	;# 
   248  0217                     	;# 
   249  0217                     	;# 
   250  0391                     	;# 
   251  0392                     	;# 
   252  0393                     	;# 
   253  0498                     	;# 
   254  0498                     	;# 
   255  0499                     	;# 
   256  049A                     	;# 
   257  049B                     	;# 
   258  049B                     	;# 
   259  049C                     	;# 
   260  049D                     	;# 
   261  049E                     	;# 
   262  049F                     	;# 
   263  0611                     	;# 
   264  0612                     	;# 
   265  0613                     	;# 
   266  0613                     	;# 
   267  0614                     	;# 
   268  0615                     	;# 
   269  0616                     	;# 
   270  0616                     	;# 
   271  0617                     	;# 
   272  0618                     	;# 
   273  0619                     	;# 
   274  0619                     	;# 
   275  061A                     	;# 
   276  061B                     	;# 
   277  061C                     	;# 
   278  061C                     	;# 
   279  0691                     	;# 
   280  0692                     	;# 
   281  0693                     	;# 
   282  0694                     	;# 
   283  0695                     	;# 
   284  0F0F                     	;# 
   285  0F10                     	;# 
   286  0F11                     	;# 
   287  0F12                     	;# 
   288  0F13                     	;# 
   289  0F14                     	;# 
   290  0F15                     	;# 
   291  0F16                     	;# 
   292  0F17                     	;# 
   293  0F18                     	;# 
   294  0F19                     	;# 
   295  0F1A                     	;# 
   296  0F1B                     	;# 
   297  0F1C                     	;# 
   298  0F1D                     	;# 
   299  0F1E                     	;# 
   300  0F1F                     	;# 
   301  0FE3                     	;# 
   302  0FE4                     	;# 
   303  0FE5                     	;# 
   304  0FE6                     	;# 
   305  0FE7                     	;# 
   306  0FE8                     	;# 
   307  0FE9                     	;# 
   308  0FEA                     	;# 
   309  0FEB                     	;# 
   310  0FED                     	;# 
   311  0FEE                     	;# 
   312  0FEF                     	;# 
   313  0000                     	;# 
   314  0001                     	;# 
   315  0002                     	;# 
   316  0003                     	;# 
   317  0004                     	;# 
   318  0005                     	;# 
   319  0006                     	;# 
   320  0007                     	;# 
   321  0008                     	;# 
   322  0009                     	;# 
   323  000A                     	;# 
   324  000B                     	;# 
   325  000C                     	;# 
   326  000E                     	;# 
   327  0011                     	;# 
   328  0012                     	;# 
   329  0013                     	;# 
   330  0015                     	;# 
   331  0016                     	;# 
   332  0016                     	;# 
   333  0017                     	;# 
   334  0018                     	;# 
   335  0019                     	;# 
   336  001A                     	;# 
   337  001B                     	;# 
   338  001C                     	;# 
   339  008C                     	;# 
   340  008E                     	;# 
   341  0091                     	;# 
   342  0092                     	;# 
   343  0093                     	;# 
   344  0095                     	;# 
   345  0096                     	;# 
   346  0097                     	;# 
   347  0099                     	;# 
   348  009A                     	;# 
   349  009B                     	;# 
   350  009B                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  009F                     	;# 
   355  010C                     	;# 
   356  010E                     	;# 
   357  0111                     	;# 
   358  0112                     	;# 
   359  0113                     	;# 
   360  0114                     	;# 
   361  0115                     	;# 
   362  0116                     	;# 
   363  0117                     	;# 
   364  0118                     	;# 
   365  0119                     	;# 
   366  011D                     	;# 
   367  018C                     	;# 
   368  018E                     	;# 
   369  0191                     	;# 
   370  0191                     	;# 
   371  0192                     	;# 
   372  0193                     	;# 
   373  0193                     	;# 
   374  0194                     	;# 
   375  0195                     	;# 
   376  0196                     	;# 
   377  0197                     	;# 
   378  020C                     	;# 
   379  0211                     	;# 
   380  0211                     	;# 
   381  0212                     	;# 
   382  0212                     	;# 
   383  0213                     	;# 
   384  0213                     	;# 
   385  0214                     	;# 
   386  0214                     	;# 
   387  0215                     	;# 
   388  0215                     	;# 
   389  0215                     	;# 
   390  0216                     	;# 
   391  0216                     	;# 
   392  0217                     	;# 
   393  0217                     	;# 
   394  0391                     	;# 
   395  0392                     	;# 
   396  0393                     	;# 
   397  0498                     	;# 
   398  0498                     	;# 
   399  0499                     	;# 
   400  049A                     	;# 
   401  049B                     	;# 
   402  049B                     	;# 
   403  049C                     	;# 
   404  049D                     	;# 
   405  049E                     	;# 
   406  049F                     	;# 
   407  0611                     	;# 
   408  0612                     	;# 
   409  0613                     	;# 
   410  0613                     	;# 
   411  0614                     	;# 
   412  0615                     	;# 
   413  0616                     	;# 
   414  0616                     	;# 
   415  0617                     	;# 
   416  0618                     	;# 
   417  0619                     	;# 
   418  0619                     	;# 
   419  061A                     	;# 
   420  061B                     	;# 
   421  061C                     	;# 
   422  061C                     	;# 
   423  0691                     	;# 
   424  0692                     	;# 
   425  0693                     	;# 
   426  0694                     	;# 
   427  0695                     	;# 
   428  0F0F                     	;# 
   429  0F10                     	;# 
   430  0F11                     	;# 
   431  0F12                     	;# 
   432  0F13                     	;# 
   433  0F14                     	;# 
   434  0F15                     	;# 
   435  0F16                     	;# 
   436  0F17                     	;# 
   437  0F18                     	;# 
   438  0F19                     	;# 
   439  0F1A                     	;# 
   440  0F1B                     	;# 
   441  0F1C                     	;# 
   442  0F1D                     	;# 
   443  0F1E                     	;# 
   444  0F1F                     	;# 
   445  0FE3                     	;# 
   446  0FE4                     	;# 
   447  0FE5                     	;# 
   448  0FE6                     	;# 
   449  0FE7                     	;# 
   450  0FE8                     	;# 
   451  0FE9                     	;# 
   452  0FEA                     	;# 
   453  0FEB                     	;# 
   454  0FED                     	;# 
   455  0FEE                     	;# 
   456  0FEF                     	;# 
   457  0000                     	;# 
   458  0001                     	;# 
   459  0002                     	;# 
   460  0003                     	;# 
   461  0004                     	;# 
   462  0005                     	;# 
   463  0006                     	;# 
   464  0007                     	;# 
   465  0008                     	;# 
   466  0009                     	;# 
   467  000A                     	;# 
   468  000B                     	;# 
   469  000C                     	;# 
   470  000E                     	;# 
   471  0011                     	;# 
   472  0012                     	;# 
   473  0013                     	;# 
   474  0015                     	;# 
   475  0016                     	;# 
   476  0016                     	;# 
   477  0017                     	;# 
   478  0018                     	;# 
   479  0019                     	;# 
   480  001A                     	;# 
   481  001B                     	;# 
   482  001C                     	;# 
   483  008C                     	;# 
   484  008E                     	;# 
   485  0091                     	;# 
   486  0092                     	;# 
   487  0093                     	;# 
   488  0095                     	;# 
   489  0096                     	;# 
   490  0097                     	;# 
   491  0099                     	;# 
   492  009A                     	;# 
   493  009B                     	;# 
   494  009B                     	;# 
   495  009C                     	;# 
   496  009D                     	;# 
   497  009E                     	;# 
   498  009F                     	;# 
   499  010C                     	;# 
   500  010E                     	;# 
   501  0111                     	;# 
   502  0112                     	;# 
   503  0113                     	;# 
   504  0114                     	;# 
   505  0115                     	;# 
   506  0116                     	;# 
   507  0117                     	;# 
   508  0118                     	;# 
   509  0119                     	;# 
   510  011D                     	;# 
   511  018C                     	;# 
   512  018E                     	;# 
   513  0191                     	;# 
   514  0191                     	;# 
   515  0192                     	;# 
   516  0193                     	;# 
   517  0193                     	;# 
   518  0194                     	;# 
   519  0195                     	;# 
   520  0196                     	;# 
   521  0197                     	;# 
   522  020C                     	;# 
   523  0211                     	;# 
   524  0211                     	;# 
   525  0212                     	;# 
   526  0212                     	;# 
   527  0213                     	;# 
   528  0213                     	;# 
   529  0214                     	;# 
   530  0214                     	;# 
   531  0215                     	;# 
   532  0215                     	;# 
   533  0215                     	;# 
   534  0216                     	;# 
   535  0216                     	;# 
   536  0217                     	;# 
   537  0217                     	;# 
   538  0391                     	;# 
   539  0392                     	;# 
   540  0393                     	;# 
   541  0498                     	;# 
   542  0498                     	;# 
   543  0499                     	;# 
   544  049A                     	;# 
   545  049B                     	;# 
   546  049B                     	;# 
   547  049C                     	;# 
   548  049D                     	;# 
   549  049E                     	;# 
   550  049F                     	;# 
   551  0611                     	;# 
   552  0612                     	;# 
   553  0613                     	;# 
   554  0613                     	;# 
   555  0614                     	;# 
   556  0615                     	;# 
   557  0616                     	;# 
   558  0616                     	;# 
   559  0617                     	;# 
   560  0618                     	;# 
   561  0619                     	;# 
   562  0619                     	;# 
   563  061A                     	;# 
   564  061B                     	;# 
   565  061C                     	;# 
   566  061C                     	;# 
   567  0691                     	;# 
   568  0692                     	;# 
   569  0693                     	;# 
   570  0694                     	;# 
   571  0695                     	;# 
   572  0F0F                     	;# 
   573  0F10                     	;# 
   574  0F11                     	;# 
   575  0F12                     	;# 
   576  0F13                     	;# 
   577  0F14                     	;# 
   578  0F15                     	;# 
   579  0F16                     	;# 
   580  0F17                     	;# 
   581  0F18                     	;# 
   582  0F19                     	;# 
   583  0F1A                     	;# 
   584  0F1B                     	;# 
   585  0F1C                     	;# 
   586  0F1D                     	;# 
   587  0F1E                     	;# 
   588  0F1F                     	;# 
   589  0FE3                     	;# 
   590  0FE4                     	;# 
   591  0FE5                     	;# 
   592  0FE6                     	;# 
   593  0FE7                     	;# 
   594  0FE8                     	;# 
   595  0FE9                     	;# 
   596  0FEA                     	;# 
   597  0FEB                     	;# 
   598  0FED                     	;# 
   599  0FEE                     	;# 
   600  0FEF                     	;# 
   601  0000                     	;# 
   602  0001                     	;# 
   603  0002                     	;# 
   604  0003                     	;# 
   605  0004                     	;# 
   606  0005                     	;# 
   607  0006                     	;# 
   608  0007                     	;# 
   609  0008                     	;# 
   610  0009                     	;# 
   611  000A                     	;# 
   612  000B                     	;# 
   613  000C                     	;# 
   614  000E                     	;# 
   615  0011                     	;# 
   616  0012                     	;# 
   617  0013                     	;# 
   618  0015                     	;# 
   619  0016                     	;# 
   620  0016                     	;# 
   621  0017                     	;# 
   622  0018                     	;# 
   623  0019                     	;# 
   624  001A                     	;# 
   625  001B                     	;# 
   626  001C                     	;# 
   627  008C                     	;# 
   628  008E                     	;# 
   629  0091                     	;# 
   630  0092                     	;# 
   631  0093                     	;# 
   632  0095                     	;# 
   633  0096                     	;# 
   634  0097                     	;# 
   635  0099                     	;# 
   636  009A                     	;# 
   637  009B                     	;# 
   638  009B                     	;# 
   639  009C                     	;# 
   640  009D                     	;# 
   641  009E                     	;# 
   642  009F                     	;# 
   643  010C                     	;# 
   644  010E                     	;# 
   645  0111                     	;# 
   646  0112                     	;# 
   647  0113                     	;# 
   648  0114                     	;# 
   649  0115                     	;# 
   650  0116                     	;# 
   651  0117                     	;# 
   652  0118                     	;# 
   653  0119                     	;# 
   654  011D                     	;# 
   655  018C                     	;# 
   656  018E                     	;# 
   657  0191                     	;# 
   658  0191                     	;# 
   659  0192                     	;# 
   660  0193                     	;# 
   661  0193                     	;# 
   662  0194                     	;# 
   663  0195                     	;# 
   664  0196                     	;# 
   665  0197                     	;# 
   666  020C                     	;# 
   667  0211                     	;# 
   668  0211                     	;# 
   669  0212                     	;# 
   670  0212                     	;# 
   671  0213                     	;# 
   672  0213                     	;# 
   673  0214                     	;# 
   674  0214                     	;# 
   675  0215                     	;# 
   676  0215                     	;# 
   677  0215                     	;# 
   678  0216                     	;# 
   679  0216                     	;# 
   680  0217                     	;# 
   681  0217                     	;# 
   682  0391                     	;# 
   683  0392                     	;# 
   684  0393                     	;# 
   685  0498                     	;# 
   686  0498                     	;# 
   687  0499                     	;# 
   688  049A                     	;# 
   689  049B                     	;# 
   690  049B                     	;# 
   691  049C                     	;# 
   692  049D                     	;# 
   693  049E                     	;# 
   694  049F                     	;# 
   695  0611                     	;# 
   696  0612                     	;# 
   697  0613                     	;# 
   698  0613                     	;# 
   699  0614                     	;# 
   700  0615                     	;# 
   701  0616                     	;# 
   702  0616                     	;# 
   703  0617                     	;# 
   704  0618                     	;# 
   705  0619                     	;# 
   706  0619                     	;# 
   707  061A                     	;# 
   708  061B                     	;# 
   709  061C                     	;# 
   710  061C                     	;# 
   711  0691                     	;# 
   712  0692                     	;# 
   713  0693                     	;# 
   714  0694                     	;# 
   715  0695                     	;# 
   716  0F0F                     	;# 
   717  0F10                     	;# 
   718  0F11                     	;# 
   719  0F12                     	;# 
   720  0F13                     	;# 
   721  0F14                     	;# 
   722  0F15                     	;# 
   723  0F16                     	;# 
   724  0F17                     	;# 
   725  0F18                     	;# 
   726  0F19                     	;# 
   727  0F1A                     	;# 
   728  0F1B                     	;# 
   729  0F1C                     	;# 
   730  0F1D                     	;# 
   731  0F1E                     	;# 
   732  0F1F                     	;# 
   733  0FE3                     	;# 
   734  0FE4                     	;# 
   735  0FE5                     	;# 
   736  0FE6                     	;# 
   737  0FE7                     	;# 
   738  0FE8                     	;# 
   739  0FE9                     	;# 
   740  0FEA                     	;# 
   741  0FEB                     	;# 
   742  0FED                     	;# 
   743  0FEE                     	;# 
   744  0FEF                     	;# 
   745  000B                     _INTCON	set	11
   746  0074                     _RC4	set	116
   747  0075                     _RC5	set	117
   748  009D                     _ADCON0	set	157
   749  009E                     _ADCON1	set	158
   750  009C                     _ADRESH	set	156
   751  009B                     _ADRESL	set	155
   752  008C                     _TRISA	set	140
   753  008E                     _TRISC	set	142
   754  011D                     _APFCON	set	285
   755  018C                     _ANSELA	set	396
   756  018E                     _ANSELC	set	398
   757  049F                     _NCO1CLK	set	1183
   758  049E                     _NCO1CON	set	1182
   759  049C                     _NCO1INCH	set	1180
   760  049B                     _NCO1INCL	set	1179
   761                           
   762                           ; #config settings
   763  0000                     
   764                           	psect	cinit
   765  000E                     start_initialization:	
   766  000E                     __initialization:	
   767                           
   768                           ; Clear objects allocated to BANK0
   769  000E  304B               	movlw	low __pbssBANK0
   770  000F  0084               	movwf	4
   771  0010  3000               	movlw	high __pbssBANK0
   772  0011  0085               	movwf	5
   773  0012  3021               	movlw	33
   774  0013  2366               	fcall	clear_ram0
   775  0014                     end_of_initialization:	
   776                           ;End of C runtime variable initialization code
   777                           
   778  0014                     __end_of__initialization:	
   779  0014  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   780  0015  0020               	movlb	0
   781  0016  2817               	ljmp	_main	;jump to C main() function
   782                           
   783                           	psect	bssBANK0
   784  004B                     __pbssBANK0:	
   785  004B                     _sample_pointer:	
   786  004B                     	ds	1
   787  004C                     _iin_samples:	
   788  004C                     	ds	16
   789  005C                     _vin_samples:	
   790  005C                     	ds	16
   791                           
   792                           	psect	clrtext
   793  0366                     clear_ram0:	
   794                           ;	Called with FSR0 containing the base address, and
   795                           ;	WREG with the size to clear
   796                           
   797  0366  0064               	clrwdt	;clear the watchdog before getting into this loop
   798  0367                     clrloop0:	
   799  0367  0180               	clrf	0	;clear RAM location pointed to by FSR
   800  0368  3101               	addfsr 0,1
   801  0369  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   802  036A  2B67               	goto	clrloop0	;have we reached the end yet?
   803  036B  3400               	retlw	0	;all done for this memory range, return
   804                           
   805                           	psect	cstackCOMMON
   806  0070                     __pcstackCOMMON:	
   807  0070                     ?_ConfigureOscillator:	
   808  0070                     ?_InitApp:	
   809                           ; 1 bytes @ 0x0
   810                           
   811  0070                     ?_InitNCO:	
   812                           ; 1 bytes @ 0x0
   813                           
   814  0070                     ?_configureADC:	
   815                           ; 1 bytes @ 0x0
   816                           
   817  0070                     ?_selectADC:	
   818                           ; 1 bytes @ 0x0
   819                           
   820  0070                     ?_convertADC:	
   821                           ; 1 bytes @ 0x0
   822                           
   823  0070                     ?_completeADC:	
   824                           ; 1 bytes @ 0x0
   825                           
   826  0070                     ?_isr:	
   827                           ; 1 bytes @ 0x0
   828                           
   829  0070                     ??_isr:	
   830                           ; 1 bytes @ 0x0
   831                           
   832  0070                     ?_main:	
   833                           ; 1 bytes @ 0x0
   834                           
   835                           
   836                           ; 1 bytes @ 0x0
   837  0070                     	ds	1
   838  0071                     ??_ConfigureOscillator:	
   839  0071                     ??_InitApp:	
   840                           ; 1 bytes @ 0x1
   841                           
   842  0071                     ??_InitNCO:	
   843                           ; 1 bytes @ 0x1
   844                           
   845  0071                     ??_configureADC:	
   846                           ; 1 bytes @ 0x1
   847                           
   848  0071                     ??_selectADC:	
   849                           ; 1 bytes @ 0x1
   850                           
   851  0071                     ??_convertADC:	
   852                           ; 1 bytes @ 0x1
   853                           
   854  0071                     ??_completeADC:	
   855                           ; 1 bytes @ 0x1
   856                           
   857  0071                     ?_getResultADC:	
   858                           ; 1 bytes @ 0x1
   859                           
   860  0071                     ?_avg:	
   861                           ; 2 bytes @ 0x1
   862                           
   863  0071                     ?___ftpack:	
   864                           ; 2 bytes @ 0x1
   865                           
   866  0071                     ___ftpack@arg:	
   867                           ; 3 bytes @ 0x1
   868                           
   869                           
   870                           ; 3 bytes @ 0x1
   871  0071                     	ds	2
   872  0073                     ??_getResultADC:	
   873  0073                     ??_avg:	
   874                           ; 1 bytes @ 0x3
   875                           
   876  0073                     selectADC@channel:	
   877                           ; 1 bytes @ 0x3
   878                           
   879                           
   880                           ; 1 bytes @ 0x3
   881  0073                     	ds	1
   882  0074                     ___ftpack@exp:	
   883                           
   884                           ; 1 bytes @ 0x4
   885  0074                     	ds	1
   886  0075                     ___ftpack@sign:	
   887                           
   888                           ; 1 bytes @ 0x5
   889  0075                     	ds	1
   890  0076                     ??___ftpack:	
   891                           
   892                           ; 1 bytes @ 0x6
   893  0076                     	ds	1
   894  0077                     avg@avg:	
   895                           
   896                           ; 4 bytes @ 0x7
   897  0077                     	ds	4
   898  007B                     avg@samples:	
   899                           
   900                           ; 1 bytes @ 0xB
   901  007B                     	ds	1
   902  007C                     avg@i:	
   903                           
   904                           ; 1 bytes @ 0xC
   905  007C                     	ds	1
   906                           
   907                           	psect	cstackBANK0
   908  0020                     __pcstackBANK0:	
   909  0020                     ?___lwtoft:	
   910  0020                     ___lwtoft@c:	
   911                           ; 3 bytes @ 0x0
   912                           
   913                           
   914                           ; 2 bytes @ 0x0
   915  0020                     	ds	3
   916  0023                     ??___lwtoft:	
   917                           
   918                           ; 1 bytes @ 0x3
   919  0023                     	ds	1
   920  0024                     ?___ftmul:	
   921  0024                     ___ftmul@f1:	
   922                           ; 3 bytes @ 0x4
   923                           
   924                           
   925                           ; 3 bytes @ 0x4
   926  0024                     	ds	3
   927  0027                     ___ftmul@f2:	
   928                           
   929                           ; 3 bytes @ 0x7
   930  0027                     	ds	3
   931  002A                     ??___ftmul:	
   932                           
   933                           ; 1 bytes @ 0xA
   934  002A                     	ds	4
   935  002E                     ___ftmul@exp:	
   936                           
   937                           ; 1 bytes @ 0xE
   938  002E                     	ds	1
   939  002F                     ___ftmul@f3_as_product:	
   940                           
   941                           ; 3 bytes @ 0xF
   942  002F                     	ds	3
   943  0032                     ___ftmul@cntr:	
   944                           
   945                           ; 1 bytes @ 0x12
   946  0032                     	ds	1
   947  0033                     ___ftmul@sign:	
   948                           
   949                           ; 1 bytes @ 0x13
   950  0033                     	ds	1
   951  0034                     ?___ftge:	
   952  0034                     ___ftge@ff1:	
   953                           ; 1 bit 
   954                           
   955                           
   956                           ; 3 bytes @ 0x14
   957  0034                     	ds	3
   958  0037                     ___ftge@ff2:	
   959                           
   960                           ; 3 bytes @ 0x17
   961  0037                     	ds	3
   962  003A                     ??___ftge:	
   963                           
   964                           ; 1 bytes @ 0x1A
   965  003A                     	ds	3
   966  003D                     ??_main:	
   967                           
   968                           ; 1 bytes @ 0x1D
   969  003D                     	ds	5
   970  0042                     main@curPV:	
   971                           
   972                           ; 2 bytes @ 0x22
   973  0042                     	ds	2
   974  0044                     main@curPI:	
   975                           
   976                           ; 2 bytes @ 0x24
   977  0044                     	ds	2
   978  0046                     main@i:	
   979                           
   980                           ; 1 bytes @ 0x26
   981  0046                     	ds	1
   982  0047                     main@curFreq:	
   983                           
   984                           ; 4 bytes @ 0x27
   985  0047                     	ds	4
   986                           
   987                           	psect	maintext
   988  0017                     __pmaintext:	
   989 ;;
   990 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
   991 ;;
   992 ;; *************** function _main *****************
   993 ;; Defined at:
   994 ;;		line 68 in file "main.c"
   995 ;; Parameters:    Size  Location     Type
   996 ;;		None
   997 ;; Auto vars:     Size  Location     Type
   998 ;;  i               1   38[BANK0 ] unsigned char 
   999 ;;  curFreq         4   39[BANK0 ] long 
  1000 ;;  curPI           2   36[BANK0 ] unsigned int 
  1001 ;;  curPV           2   34[BANK0 ] unsigned int 
  1002 ;; Return value:  Size  Location     Type
  1003 ;;                  1    wreg      void 
  1004 ;; Registers used:
  1005 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1006 ;; Tracked objects:
  1007 ;;		On entry : B1F/0
  1008 ;;		On exit  : 0/0
  1009 ;;		Unchanged: 0/0
  1010 ;; Data sizes:     COMMON   BANK0   BANK1
  1011 ;;      Params:         0       0       0
  1012 ;;      Locals:         0       9       0
  1013 ;;      Temps:          0       5       0
  1014 ;;      Totals:         0      14       0
  1015 ;;Total ram usage:       14 bytes
  1016 ;; Hardware stack levels required when called:    3
  1017 ;; This function calls:
  1018 ;;		_ConfigureOscillator
  1019 ;;		_InitApp
  1020 ;;		_InitNCO
  1021 ;;		___ftge
  1022 ;;		___ftmul
  1023 ;;		___lwtoft
  1024 ;;		_avg
  1025 ;;		_completeADC
  1026 ;;		_configureADC
  1027 ;;		_convertADC
  1028 ;;		_getResultADC
  1029 ;;		_selectADC
  1030 ;; This function is called by:
  1031 ;;		Startup code after reset
  1032 ;; This function uses a non-reentrant model
  1033 ;;
  1034                           
  1035                           
  1036                           ;psect for function _main
  1037  0017                     _main:	
  1038                           
  1039                           ;main.c: 71: ConfigureOscillator();
  1040                           
  1041                           ;incstack = 0
  1042                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1043  0017  2376               	fcall	_ConfigureOscillator
  1044                           
  1045                           ;main.c: 74: InitApp();
  1046  0018  22E8               	fcall	_InitApp
  1047                           
  1048                           ;main.c: 75: InitNCO();
  1049  0019  235B               	fcall	_InitNCO
  1050                           
  1051                           ;main.c: 76: configureADC();
  1052  001A  2372               	fcall	_configureADC
  1053                           
  1054                           ;main.c: 78: RC5=0;
  1055  001B  0020               	movlb	0	; select bank0
  1056  001C  128E               	bcf	14,5	;volatile
  1057  001D  0064               	clrwdt	;# 
  1058                           
  1059                           ;main.c: 80: _delay((unsigned long)((1000)*(800000/4000.0)));
  1060  001E  3002               	movlw	2
  1061  001F  0020               	movlb	0	; select bank0
  1062  0020  00BF               	movwf	??_main+2
  1063  0021  3004               	movlw	4
  1064  0022  00BE               	movwf	??_main+1
  1065  0023  30BA               	movlw	186
  1066  0024  00BD               	movwf	??_main
  1067  0025                     u897:	
  1068  0025  0BBD               	decfsz	??_main,f
  1069  0026  2825               	goto	u897
  1070  0027  0BBE               	decfsz	??_main+1,f
  1071  0028  2825               	goto	u897
  1072  0029  0BBF               	decfsz	??_main+2,f
  1073  002A  2825               	goto	u897
  1074  002B  0000               	nop
  1075  002C  0064               	clrwdt	;# 
  1076                           
  1077                           ;main.c: 82: _delay((unsigned long)((1000)*(800000/4000.0)));
  1078  002D  3002               	movlw	2
  1079  002E  0020               	movlb	0	; select bank0
  1080  002F  00BF               	movwf	??_main+2
  1081  0030  3004               	movlw	4
  1082  0031  00BE               	movwf	??_main+1
  1083  0032  30BA               	movlw	186
  1084  0033  00BD               	movwf	??_main
  1085  0034                     u907:	
  1086  0034  0BBD               	decfsz	??_main,f
  1087  0035  2834               	goto	u907
  1088  0036  0BBE               	decfsz	??_main+1,f
  1089  0037  2834               	goto	u907
  1090  0038  0BBF               	decfsz	??_main+2,f
  1091  0039  2834               	goto	u907
  1092  003A  0000               	nop
  1093                           
  1094                           ;main.c: 84: uint16_t curPV = 0;
  1095  003B  0020               	movlb	0	; select bank0
  1096  003C  01C2               	clrf	main@curPV
  1097  003D  01C3               	clrf	main@curPV+1
  1098                           
  1099                           ;main.c: 85: uint16_t curPI = 0;
  1100  003E  01C4               	clrf	main@curPI
  1101  003F  01C5               	clrf	main@curPI+1
  1102                           
  1103                           ;main.c: 87: int32_t curFreq = 0x0;
  1104  0040  3000               	movlw	0
  1105  0041  00CA               	movwf	main@curFreq+3
  1106  0042  3000               	movlw	0
  1107  0043  00C9               	movwf	main@curFreq+2
  1108  0044  3000               	movlw	0
  1109  0045  00C8               	movwf	main@curFreq+1
  1110  0046  3000               	movlw	0
  1111  0047  00C7               	movwf	main@curFreq
  1112  0048                     l54:	
  1113                           ;main.c: 89: while(1)
  1114                           
  1115  0048  0064               	clrwdt	;# 
  1116                           
  1117                           ;main.c: 93: curPV=0;
  1118  0049  0020               	movlb	0	; select bank0
  1119  004A  01C2               	clrf	main@curPV
  1120  004B  01C3               	clrf	main@curPV+1
  1121                           
  1122                           ;main.c: 94: curPI=0;
  1123  004C  01C4               	clrf	main@curPI
  1124  004D  01C5               	clrf	main@curPI+1
  1125                           
  1126                           ;main.c: 95: for(uint8_t i=0; i<16;i++){
  1127  004E  01C6               	clrf	main@i
  1128  004F  3010               	movlw	16
  1129  0050  0246               	subwf	main@i,w
  1130  0051  1803               	btfsc	3,0
  1131  0052  2875               	goto	l937
  1132  0053                     l923:	
  1133                           
  1134                           ;main.c: 97: selectADC(2);
  1135  0053  3002               	movlw	2
  1136  0054  2324               	fcall	_selectADC
  1137                           
  1138                           ;main.c: 98: convertADC();
  1139  0055  236C               	fcall	_convertADC
  1140  0056                     l925:	
  1141                           ;main.c: 99: while(!completeADC());
  1142                           
  1143  0056  234E               	fcall	_completeADC
  1144  0057  3A00               	xorlw	0
  1145  0058  1903               	skipnz
  1146  0059  2856               	goto	l925
  1147                           
  1148                           ;main.c: 100: curPV+=getResultADC();
  1149  005A  2308               	fcall	_getResultADC
  1150  005B  0871               	movf	?_getResultADC,w
  1151  005C  0020               	movlb	0	; select bank0
  1152  005D  07C2               	addwf	main@curPV,f
  1153  005E  0872               	movf	?_getResultADC+1,w
  1154  005F  3DC3               	addwfc	main@curPV+1,f
  1155                           
  1156                           ;main.c: 102: selectADC(6);
  1157  0060  3006               	movlw	6
  1158  0061  2324               	fcall	_selectADC
  1159                           
  1160                           ;main.c: 103: convertADC();
  1161  0062  236C               	fcall	_convertADC
  1162  0063                     l929:	
  1163                           ;main.c: 104: while(!completeADC());
  1164                           
  1165  0063  234E               	fcall	_completeADC
  1166  0064  3A00               	xorlw	0
  1167  0065  1903               	skipnz
  1168  0066  2863               	goto	l929
  1169                           
  1170                           ;main.c: 105: curPI += getResultADC();
  1171  0067  2308               	fcall	_getResultADC
  1172  0068  0871               	movf	?_getResultADC,w
  1173  0069  0020               	movlb	0	; select bank0
  1174  006A  07C4               	addwf	main@curPI,f
  1175  006B  0872               	movf	?_getResultADC+1,w
  1176  006C  3DC5               	addwfc	main@curPI+1,f
  1177  006D  3001               	movlw	1
  1178  006E  00BD               	movwf	??_main
  1179  006F  083D               	movf	??_main,w
  1180  0070  07C6               	addwf	main@i,f
  1181  0071  3010               	movlw	16
  1182  0072  0246               	subwf	main@i,w
  1183  0073  1C03               	skipc
  1184  0074  2853               	goto	l923
  1185  0075                     l937:	
  1186                           
  1187                           ;main.c: 106: }
  1188                           ;main.c: 108: if((float) avg(&vin_samples)* avg(&iin_samples) > (float) curPV * curPI){
  1189  0075  0845               	movf	main@curPI+1,w
  1190  0076  00A1               	movwf	___lwtoft@c+1
  1191  0077  0844               	movf	main@curPI,w
  1192  0078  00A0               	movwf	___lwtoft@c
  1193  0079  233A               	fcall	___lwtoft
  1194  007A  0020               	movlb	0	; select bank0
  1195  007B  0820               	movf	?___lwtoft,w
  1196  007C  00A4               	movwf	___ftmul@f1
  1197  007D  0821               	movf	?___lwtoft+1,w
  1198  007E  00A5               	movwf	___ftmul@f1+1
  1199  007F  0822               	movf	?___lwtoft+2,w
  1200  0080  00A6               	movwf	___ftmul@f1+2
  1201  0081  0843               	movf	main@curPV+1,w
  1202  0082  00A1               	movwf	___lwtoft@c+1
  1203  0083  0842               	movf	main@curPV,w
  1204  0084  00A0               	movwf	___lwtoft@c
  1205  0085  233A               	fcall	___lwtoft
  1206  0086  0020               	movlb	0	; select bank0
  1207  0087  0820               	movf	?___lwtoft,w
  1208  0088  00A7               	movwf	___ftmul@f2
  1209  0089  0821               	movf	?___lwtoft+1,w
  1210  008A  00A8               	movwf	___ftmul@f2+1
  1211  008B  0822               	movf	?___lwtoft+2,w
  1212  008C  00A9               	movwf	___ftmul@f2+2
  1213  008D  215A               	fcall	___ftmul
  1214  008E  0020               	movlb	0	; select bank0
  1215  008F  0824               	movf	?___ftmul,w
  1216  0090  00B4               	movwf	___ftge@ff1
  1217  0091  0825               	movf	?___ftmul+1,w
  1218  0092  00B5               	movwf	___ftge@ff1+1
  1219  0093  0826               	movf	?___ftmul+2,w
  1220  0094  00B6               	movwf	___ftge@ff1+2
  1221  0095  304C               	movlw	(low (_iin_samples| 0))& (0+255)
  1222  0096  22AD               	fcall	_avg
  1223  0097  0872               	movf	?_avg+1,w
  1224  0098  0020               	movlb	0	; select bank0
  1225  0099  00A1               	movwf	___lwtoft@c+1
  1226  009A  0871               	movf	?_avg,w
  1227  009B  00A0               	movwf	___lwtoft@c
  1228  009C  233A               	fcall	___lwtoft
  1229  009D  0020               	movlb	0	; select bank0
  1230  009E  0820               	movf	?___lwtoft,w
  1231  009F  00A4               	movwf	___ftmul@f1
  1232  00A0  0821               	movf	?___lwtoft+1,w
  1233  00A1  00A5               	movwf	___ftmul@f1+1
  1234  00A2  0822               	movf	?___lwtoft+2,w
  1235  00A3  00A6               	movwf	___ftmul@f1+2
  1236  00A4  305C               	movlw	(low (_vin_samples| 0))& (0+255)
  1237  00A5  22AD               	fcall	_avg
  1238  00A6  0872               	movf	?_avg+1,w
  1239  00A7  0020               	movlb	0	; select bank0
  1240  00A8  00A1               	movwf	___lwtoft@c+1
  1241  00A9  0871               	movf	?_avg,w
  1242  00AA  00A0               	movwf	___lwtoft@c
  1243  00AB  233A               	fcall	___lwtoft
  1244  00AC  0020               	movlb	0	; select bank0
  1245  00AD  0820               	movf	?___lwtoft,w
  1246  00AE  00A7               	movwf	___ftmul@f2
  1247  00AF  0821               	movf	?___lwtoft+1,w
  1248  00B0  00A8               	movwf	___ftmul@f2+1
  1249  00B1  0822               	movf	?___lwtoft+2,w
  1250  00B2  00A9               	movwf	___ftmul@f2+2
  1251  00B3  215A               	fcall	___ftmul
  1252  00B4  0020               	movlb	0	; select bank0
  1253  00B5  0824               	movf	?___ftmul,w
  1254  00B6  00B7               	movwf	___ftge@ff2
  1255  00B7  0825               	movf	?___ftmul+1,w
  1256  00B8  00B8               	movwf	___ftge@ff2+1
  1257  00B9  0826               	movf	?___ftmul+2,w
  1258  00BA  00B9               	movwf	___ftge@ff2+2
  1259  00BB  2271               	fcall	___ftge
  1260  00BC  1803               	btfsc	3,0
  1261  00BD  28EF               	goto	l63
  1262                           
  1263                           ;main.c: 109: RC5=0;
  1264  00BE  0020               	movlb	0	; select bank0
  1265  00BF  128E               	bcf	14,5	;volatile
  1266                           
  1267                           ;main.c: 110: if(curFreq-0xF>0) curFreq-= 0xF;
  1268  00C0  30F1               	movlw	241
  1269  00C1  00BD               	movwf	??_main
  1270  00C2  30FF               	movlw	255
  1271  00C3  00BE               	movwf	??_main+1
  1272  00C4  30FF               	movlw	255
  1273  00C5  00BF               	movwf	??_main+2
  1274  00C6  30FF               	movlw	255
  1275  00C7  00C0               	movwf	??_main+3
  1276  00C8  0847               	movf	main@curFreq,w
  1277  00C9  07BD               	addwf	??_main,f
  1278  00CA  0848               	movf	main@curFreq+1,w
  1279  00CB  3DBE               	addwfc	??_main+1,f
  1280  00CC  0849               	movf	main@curFreq+2,w
  1281  00CD  3DBF               	addwfc	??_main+2,f
  1282  00CE  084A               	movf	main@curFreq+3,w
  1283  00CF  3DC0               	addwfc	??_main+3,f
  1284  00D0  1BC0               	btfsc	??_main+3,7
  1285  00D1  28E7               	goto	l945
  1286  00D2  0840               	movf	??_main+3,w
  1287  00D3  1D03               	btfss	3,2
  1288  00D4  28DF               	goto	l943
  1289  00D5  083F               	movf	??_main+2,w
  1290  00D6  1D03               	btfss	3,2
  1291  00D7  28DF               	goto	l943
  1292  00D8  083E               	movf	??_main+1,w
  1293  00D9  1D03               	btfss	3,2
  1294  00DA  28DF               	goto	l943
  1295  00DB  3001               	movlw	1
  1296  00DC  023D               	subwf	??_main,w
  1297  00DD  1C03               	btfss	3,0
  1298  00DE  28E7               	goto	l945
  1299  00DF                     l943:	
  1300  00DF  30F1               	movlw	241
  1301  00E0  07C7               	addwf	main@curFreq,f
  1302  00E1  30FF               	movlw	255
  1303  00E2  3DC8               	addwfc	main@curFreq+1,f
  1304  00E3  30FF               	movlw	255
  1305  00E4  3DC9               	addwfc	main@curFreq+2,f
  1306  00E5  30FF               	movlw	255
  1307  00E6  2916               	goto	L1
  1308  00E7                     l945:	
  1309                           
  1310                           ;main.c: 111: else curFreq= 0;
  1311  00E7  3000               	movlw	0
  1312  00E8  00CA               	movwf	main@curFreq+3
  1313  00E9  3000               	movlw	0
  1314  00EA  00C9               	movwf	main@curFreq+2
  1315  00EB  3000               	movlw	0
  1316  00EC  00C8               	movwf	main@curFreq+1
  1317  00ED  3000               	movlw	0
  1318  00EE  291F               	goto	L2
  1319  00EF                     l63:	
  1320                           ;main.c: 113: }
  1321                           
  1322                           
  1323                           ;main.c: 114: else{
  1324                           ;main.c: 115: RC5=1;
  1325  00EF  0020               	movlb	0	; select bank0
  1326  00F0  168E               	bsf	14,5	;volatile
  1327                           
  1328                           ;main.c: 116: if(curFreq+0xF<0xFFF) curFreq+= 0xF;
  1329  00F1  300F               	movlw	15
  1330  00F2  00BD               	movwf	??_main
  1331  00F3  3000               	movlw	0
  1332  00F4  00BE               	movwf	??_main+1
  1333  00F5  3000               	movlw	0
  1334  00F6  00BF               	movwf	??_main+2
  1335  00F7  3000               	movlw	0
  1336  00F8  00C0               	movwf	??_main+3
  1337  00F9  0847               	movf	main@curFreq,w
  1338  00FA  07BD               	addwf	??_main,f
  1339  00FB  0848               	movf	main@curFreq+1,w
  1340  00FC  3DBE               	addwfc	??_main+1,f
  1341  00FD  0849               	movf	main@curFreq+2,w
  1342  00FE  3DBF               	addwfc	??_main+2,f
  1343  00FF  084A               	movf	main@curFreq+3,w
  1344  0100  3DC0               	addwfc	??_main+3,f
  1345  0101  1BC0               	btfsc	??_main+3,7
  1346  0102  290F               	goto	l949
  1347  0103  0840               	movf	??_main+3,w
  1348  0104  1D03               	btfss	3,2
  1349  0105  2918               	goto	l951
  1350  0106  083F               	movf	??_main+2,w
  1351  0107  1D03               	btfss	3,2
  1352  0108  2918               	goto	l951
  1353  0109  30FF               	movlw	255
  1354  010A  023D               	subwf	??_main,w
  1355  010B  300F               	movlw	15
  1356  010C  3B3E               	subwfb	??_main+1,w
  1357  010D  1803               	btfsc	3,0
  1358  010E  2918               	goto	l951
  1359  010F                     l949:	
  1360  010F  300F               	movlw	15
  1361  0110  07C7               	addwf	main@curFreq,f
  1362  0111  3000               	movlw	0
  1363  0112  3DC8               	addwfc	main@curFreq+1,f
  1364  0113  3000               	movlw	0
  1365  0114  3DC9               	addwfc	main@curFreq+2,f
  1366  0115  3000               	movlw	0
  1367  0116                     L1:	
  1368  0116  3DCA               	addwfc	main@curFreq+3,f
  1369  0117  2920               	goto	l953
  1370  0118                     l951:	
  1371                           
  1372                           ;main.c: 117: else curFreq = 0xFFFF;
  1373  0118  3000               	movlw	0
  1374  0119  00CA               	movwf	main@curFreq+3
  1375  011A  3000               	movlw	0
  1376  011B  00C9               	movwf	main@curFreq+2
  1377  011C  30FF               	movlw	255
  1378  011D  00C8               	movwf	main@curFreq+1
  1379  011E  30FF               	movlw	255
  1380  011F                     L2:	
  1381  011F  00C7               	movwf	main@curFreq
  1382  0120                     l953:	
  1383                           
  1384                           ;main.c: 118: }
  1385                           ;main.c: 120: vin_samples[sample_pointer]=curPV;
  1386  0120  354B               	lslf	_sample_pointer,w
  1387  0121  3E5C               	addlw	(low (_vin_samples| 0))& (0+255)
  1388  0122  0086               	movwf	6
  1389  0123  0187               	clrf	7
  1390  0124  0842               	movf	main@curPV,w
  1391  0125  3FC0               	movwi [0]fsr1
  1392  0126  0843               	movf	main@curPV+1,w
  1393  0127  3FC1               	movwi [1]fsr1
  1394                           
  1395                           ;main.c: 121: iin_samples[sample_pointer]=curPI;
  1396  0128  354B               	lslf	_sample_pointer,w
  1397  0129  3E4C               	addlw	(low (_iin_samples| 0))& (0+255)
  1398  012A  0086               	movwf	6
  1399  012B  0187               	clrf	7
  1400  012C  0844               	movf	main@curPI,w
  1401  012D  3FC0               	movwi [0]fsr1
  1402  012E  0845               	movf	main@curPI+1,w
  1403  012F  3FC1               	movwi [1]fsr1
  1404                           
  1405                           ;main.c: 122: if(++sample_pointer==8) sample_pointer = 0;
  1406  0130  3001               	movlw	1
  1407  0131  00BD               	movwf	??_main
  1408  0132  083D               	movf	??_main,w
  1409  0133  07CB               	addwf	_sample_pointer,f
  1410  0134  3008               	movlw	8
  1411  0135  064B               	xorwf	_sample_pointer,w
  1412  0136  1903               	btfsc	3,2
  1413  0137  01CB               	clrf	_sample_pointer
  1414                           
  1415                           ;main.c: 124: NCO1INCH = curFreq>>8;
  1416  0138  0847               	movf	main@curFreq,w
  1417  0139  00BD               	movwf	??_main
  1418  013A  0848               	movf	main@curFreq+1,w
  1419  013B  00BE               	movwf	??_main+1
  1420  013C  0849               	movf	main@curFreq+2,w
  1421  013D  00BF               	movwf	??_main+2
  1422  013E  084A               	movf	main@curFreq+3,w
  1423  013F  00C0               	movwf	??_main+3
  1424  0140  3008               	movlw	8
  1425  0141  00C1               	movwf	??_main+4
  1426  0142                     u885:	
  1427  0142  37C0               	asrf	??_main+3,f
  1428  0143  0CBF               	rrf	??_main+2,f
  1429  0144  0CBE               	rrf	??_main+1,f
  1430  0145  0CBD               	rrf	??_main,f
  1431  0146  0BC1               	decfsz	??_main+4,f
  1432  0147  2942               	goto	u885
  1433  0148  083D               	movf	??_main,w
  1434  0149  0029               	movlb	9	; select bank9
  1435  014A  009C               	movwf	28	;volatile
  1436                           
  1437                           ;main.c: 125: NCO1INCL = curFreq&0xFF;
  1438  014B  0020               	movlb	0	; select bank0
  1439  014C  0847               	movf	main@curFreq,w
  1440  014D  0029               	movlb	9	; select bank9
  1441  014E  009B               	movwf	27	;volatile
  1442                           
  1443                           ;main.c: 126: _delay((unsigned long)((50)*(800000/4000.0)));
  1444  014F  300D               	movlw	13
  1445  0150  0020               	movlb	0	; select bank0
  1446  0151  00BE               	movwf	??_main+1
  1447  0152  30FB               	movlw	251
  1448  0153  00BD               	movwf	??_main
  1449  0154                     u917:	
  1450  0154  0BBD               	decfsz	??_main,f
  1451  0155  2954               	goto	u917
  1452  0156  0BBE               	decfsz	??_main+1,f
  1453  0157  2954               	goto	u917
  1454  0158  3200               	nop2
  1455  0159  2848               	goto	l54
  1456  015A                     __end_of_main:	
  1457                           
  1458                           	psect	text1
  1459  0324                     __ptext1:	
  1460 ;; *************** function _selectADC *****************
  1461 ;; Defined at:
  1462 ;;		line 142 in file "main.c"
  1463 ;; Parameters:    Size  Location     Type
  1464 ;;  channel         1    wreg     unsigned char 
  1465 ;; Auto vars:     Size  Location     Type
  1466 ;;  channel         1    3[COMMON] unsigned char 
  1467 ;; Return value:  Size  Location     Type
  1468 ;;                  1    wreg      void 
  1469 ;; Registers used:
  1470 ;;		wreg, status,2, status,0
  1471 ;; Tracked objects:
  1472 ;;		On entry : 0/0
  1473 ;;		On exit  : 0/0
  1474 ;;		Unchanged: 0/0
  1475 ;; Data sizes:     COMMON   BANK0   BANK1
  1476 ;;      Params:         0       0       0
  1477 ;;      Locals:         1       0       0
  1478 ;;      Temps:          2       0       0
  1479 ;;      Totals:         3       0       0
  1480 ;;Total ram usage:        3 bytes
  1481 ;; Hardware stack levels used:    1
  1482 ;; Hardware stack levels required when called:    1
  1483 ;; This function calls:
  1484 ;;		Nothing
  1485 ;; This function is called by:
  1486 ;;		_main
  1487 ;; This function uses a non-reentrant model
  1488 ;;
  1489                           
  1490                           
  1491                           ;psect for function _selectADC
  1492  0324                     _selectADC:	
  1493                           
  1494                           ;incstack = 0
  1495                           ; Regs used in _selectADC: [wreg+status,2+status,0]
  1496                           ;selectADC@channel stored from wreg
  1497  0324  00F3               	movwf	selectADC@channel
  1498                           
  1499                           ;main.c: 144: channel &= 0b111;
  1500  0325  3007               	movlw	7
  1501  0326  00F1               	movwf	??_selectADC
  1502  0327  0871               	movf	??_selectADC,w
  1503  0328  05F3               	andwf	selectADC@channel,f
  1504                           
  1505                           ;main.c: 146: ADCON0 &= (2<<0b000);
  1506  0329  3002               	movlw	2
  1507  032A  00F1               	movwf	??_selectADC
  1508  032B  0871               	movf	??_selectADC,w
  1509  032C  0021               	movlb	1	; select bank1
  1510  032D  059D               	andwf	29,f	;volatile
  1511                           
  1512                           ;main.c: 148: ADCON0 |= (2<<channel);
  1513  032E  3002               	movlw	2
  1514  032F  00F1               	movwf	??_selectADC
  1515  0330  0A73               	incf	selectADC@channel,w
  1516  0331  2B33               	goto	u574
  1517  0332                     u575:	
  1518  0332  35F1               	lslf	??_selectADC,f
  1519  0333                     u574:	
  1520  0333  0B89               	decfsz	9,f
  1521  0334  2B32               	goto	u575
  1522  0335  0871               	movf	??_selectADC,w
  1523  0336  00F2               	movwf	??_selectADC+1
  1524  0337  0872               	movf	??_selectADC+1,w
  1525  0338  049D               	iorwf	29,f	;volatile
  1526  0339  0008               	return
  1527  033A                     __end_of_selectADC:	
  1528                           
  1529                           	psect	text2
  1530  0308                     __ptext2:	
  1531 ;; *************** function _getResultADC *****************
  1532 ;; Defined at:
  1533 ;;		line 159 in file "main.c"
  1534 ;; Parameters:    Size  Location     Type
  1535 ;;		None
  1536 ;; Auto vars:     Size  Location     Type
  1537 ;;		None
  1538 ;; Return value:  Size  Location     Type
  1539 ;;                  2    1[COMMON] unsigned int 
  1540 ;; Registers used:
  1541 ;;		wreg, status,2, status,0
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMMON   BANK0   BANK1
  1547 ;;      Params:         2       0       0
  1548 ;;      Locals:         0       0       0
  1549 ;;      Temps:          7       0       0
  1550 ;;      Totals:         9       0       0
  1551 ;;Total ram usage:        9 bytes
  1552 ;; Hardware stack levels used:    1
  1553 ;; Hardware stack levels required when called:    1
  1554 ;; This function calls:
  1555 ;;		Nothing
  1556 ;; This function is called by:
  1557 ;;		_main
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561                           
  1562                           ;psect for function _getResultADC
  1563  0308                     _getResultADC:	
  1564                           
  1565                           ;main.c: 160: return (ADRESH<<2)|(ADRESL>>6);
  1566                           
  1567                           ;incstack = 0
  1568                           ; Regs used in _getResultADC: [wreg+status,2+status,0]
  1569  0308  0021               	movlb	1	; select bank1
  1570  0309  081B               	movf	27,w	;volatile
  1571  030A  00F3               	movwf	??_getResultADC
  1572  030B  3006               	movlw	6
  1573  030C                     u615:	
  1574  030C  36F3               	lsrf	??_getResultADC,f
  1575  030D  0B89               	decfsz	9,f
  1576  030E  2B0C               	goto	u615
  1577  030F  0873               	movf	??_getResultADC,w
  1578  0310  00F4               	movwf	??_getResultADC+1
  1579  0311  01F5               	clrf	??_getResultADC+2
  1580  0312  081C               	movf	28,w	;volatile
  1581  0313  00F6               	movwf	??_getResultADC+3
  1582  0314  01F7               	clrf	??_getResultADC+4
  1583  0315  35F6               	lslf	??_getResultADC+3,f
  1584  0316  0DF7               	rlf	??_getResultADC+4,f
  1585  0317  35F6               	lslf	??_getResultADC+3,f
  1586  0318  0DF7               	rlf	??_getResultADC+4,f
  1587  0319  0874               	movf	??_getResultADC+1,w
  1588  031A  0476               	iorwf	??_getResultADC+3,w
  1589  031B  00F8               	movwf	??_getResultADC+5
  1590  031C  0875               	movf	??_getResultADC+2,w
  1591  031D  0477               	iorwf	??_getResultADC+4,w
  1592  031E  00F9               	movwf	??_getResultADC+6
  1593  031F  0878               	movf	??_getResultADC+5,w
  1594  0320  00F1               	movwf	?_getResultADC
  1595  0321  0879               	movf	??_getResultADC+6,w
  1596  0322  00F2               	movwf	?_getResultADC+1
  1597  0323  0008               	return
  1598  0324                     __end_of_getResultADC:	
  1599                           
  1600                           	psect	text3
  1601  036C                     __ptext3:	
  1602 ;; *************** function _convertADC *****************
  1603 ;; Defined at:
  1604 ;;		line 151 in file "main.c"
  1605 ;; Parameters:    Size  Location     Type
  1606 ;;		None
  1607 ;; Auto vars:     Size  Location     Type
  1608 ;;		None
  1609 ;; Return value:  Size  Location     Type
  1610 ;;                  1    wreg      void 
  1611 ;; Registers used:
  1612 ;;		wreg, status,2, status,0
  1613 ;; Tracked objects:
  1614 ;;		On entry : 0/0
  1615 ;;		On exit  : 0/0
  1616 ;;		Unchanged: 0/0
  1617 ;; Data sizes:     COMMON   BANK0   BANK1
  1618 ;;      Params:         0       0       0
  1619 ;;      Locals:         0       0       0
  1620 ;;      Temps:          1       0       0
  1621 ;;      Totals:         1       0       0
  1622 ;;Total ram usage:        1 bytes
  1623 ;; Hardware stack levels used:    1
  1624 ;; Hardware stack levels required when called:    1
  1625 ;; This function calls:
  1626 ;;		Nothing
  1627 ;; This function is called by:
  1628 ;;		_main
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632                           
  1633                           ;psect for function _convertADC
  1634  036C                     _convertADC:	
  1635                           
  1636                           ;main.c: 152: ADCON0 |=0b11;
  1637                           
  1638                           ;incstack = 0
  1639                           ; Regs used in _convertADC: [wreg+status,2+status,0]
  1640  036C  3003               	movlw	3
  1641  036D  00F1               	movwf	??_convertADC
  1642  036E  0871               	movf	??_convertADC,w
  1643  036F  0021               	movlb	1	; select bank1
  1644  0370  049D               	iorwf	29,f	;volatile
  1645  0371  0008               	return
  1646  0372                     __end_of_convertADC:	
  1647                           
  1648                           	psect	text4
  1649  0372                     __ptext4:	
  1650 ;; *************** function _configureADC *****************
  1651 ;; Defined at:
  1652 ;;		line 138 in file "main.c"
  1653 ;; Parameters:    Size  Location     Type
  1654 ;;		None
  1655 ;; Auto vars:     Size  Location     Type
  1656 ;;		None
  1657 ;; Return value:  Size  Location     Type
  1658 ;;                  1    wreg      void 
  1659 ;; Registers used:
  1660 ;;		wreg
  1661 ;; Tracked objects:
  1662 ;;		On entry : 0/0
  1663 ;;		On exit  : 0/0
  1664 ;;		Unchanged: 0/0
  1665 ;; Data sizes:     COMMON   BANK0   BANK1
  1666 ;;      Params:         0       0       0
  1667 ;;      Locals:         0       0       0
  1668 ;;      Temps:          0       0       0
  1669 ;;      Totals:         0       0       0
  1670 ;;Total ram usage:        0 bytes
  1671 ;; Hardware stack levels used:    1
  1672 ;; Hardware stack levels required when called:    1
  1673 ;; This function calls:
  1674 ;;		Nothing
  1675 ;; This function is called by:
  1676 ;;		_main
  1677 ;; This function uses a non-reentrant model
  1678 ;;
  1679                           
  1680                           
  1681                           ;psect for function _configureADC
  1682  0372                     _configureADC:	
  1683                           
  1684                           ;main.c: 139: ADCON1 = 0b01110000;
  1685                           
  1686                           ;incstack = 0
  1687                           ; Regs used in _configureADC: [wreg]
  1688  0372  3070               	movlw	112
  1689  0373  0021               	movlb	1	; select bank1
  1690  0374  009E               	movwf	30	;volatile
  1691  0375  0008               	return
  1692  0376                     __end_of_configureADC:	
  1693                           
  1694                           	psect	text5
  1695  034E                     __ptext5:	
  1696 ;; *************** function _completeADC *****************
  1697 ;; Defined at:
  1698 ;;		line 155 in file "main.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;		None
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;		None
  1703 ;; Return value:  Size  Location     Type
  1704 ;;                  1    wreg      unsigned char 
  1705 ;; Registers used:
  1706 ;;		wreg, status,2, status,0
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMMON   BANK0   BANK1
  1712 ;;      Params:         0       0       0
  1713 ;;      Locals:         0       0       0
  1714 ;;      Temps:          1       0       0
  1715 ;;      Totals:         1       0       0
  1716 ;;Total ram usage:        1 bytes
  1717 ;; Hardware stack levels used:    1
  1718 ;; Hardware stack levels required when called:    1
  1719 ;; This function calls:
  1720 ;;		Nothing
  1721 ;; This function is called by:
  1722 ;;		_main
  1723 ;; This function uses a non-reentrant model
  1724 ;;
  1725                           
  1726                           
  1727                           ;psect for function _completeADC
  1728  034E                     _completeADC:	
  1729                           
  1730                           ;main.c: 156: return !((ADCON0>>1)&0b1);
  1731                           
  1732                           ;incstack = 0
  1733                           ; Regs used in _completeADC: [wreg+status,2+status,0]
  1734  034E  0021               	movlb	1	; select bank1
  1735  034F  081D               	movf	29,w	;volatile
  1736  0350  00F1               	movwf	??_completeADC
  1737  0351  3001               	movlw	1
  1738  0352                     u585:	
  1739  0352  36F1               	lsrf	??_completeADC,f
  1740  0353  0B89               	decfsz	9,f
  1741  0354  2B52               	goto	u585
  1742  0355  1871               	btfsc	??_completeADC,0
  1743  0356  2B59               	goto	u590
  1744  0357  3001               	movlw	1
  1745  0358  0008               	return
  1746  0359                     u590:	
  1747  0359  3000               	movlw	0
  1748  035A  0008               	return
  1749  035B                     __end_of_completeADC:	
  1750                           
  1751                           	psect	text6
  1752  02AD                     __ptext6:	
  1753 ;; *************** function _avg *****************
  1754 ;; Defined at:
  1755 ;;		line 130 in file "main.c"
  1756 ;; Parameters:    Size  Location     Type
  1757 ;;  samples         1    wreg     PTR unsigned int 
  1758 ;;		 -> iin_samples(16), vin_samples(16), 
  1759 ;; Auto vars:     Size  Location     Type
  1760 ;;  samples         1   11[COMMON] PTR unsigned int 
  1761 ;;		 -> iin_samples(16), vin_samples(16), 
  1762 ;;  i               1   12[COMMON] unsigned char 
  1763 ;;  avg             4    7[COMMON] unsigned long 
  1764 ;; Return value:  Size  Location     Type
  1765 ;;                  2    1[COMMON] unsigned int 
  1766 ;; Registers used:
  1767 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1768 ;; Tracked objects:
  1769 ;;		On entry : 0/0
  1770 ;;		On exit  : 0/0
  1771 ;;		Unchanged: 0/0
  1772 ;; Data sizes:     COMMON   BANK0   BANK1
  1773 ;;      Params:         2       0       0
  1774 ;;      Locals:         6       0       0
  1775 ;;      Temps:          4       0       0
  1776 ;;      Totals:        12       0       0
  1777 ;;Total ram usage:       12 bytes
  1778 ;; Hardware stack levels used:    1
  1779 ;; Hardware stack levels required when called:    1
  1780 ;; This function calls:
  1781 ;;		Nothing
  1782 ;; This function is called by:
  1783 ;;		_main
  1784 ;; This function uses a non-reentrant model
  1785 ;;
  1786                           
  1787                           
  1788                           ;psect for function _avg
  1789  02AD                     _avg:	
  1790                           
  1791                           ;incstack = 0
  1792                           ; Regs used in _avg: [wreg+fsr1l+fsr1h+status,2+status,0]
  1793                           ;avg@samples stored from wreg
  1794  02AD  00FB               	movwf	avg@samples
  1795                           
  1796                           ;main.c: 131: uint32_t avg = 0;
  1797  02AE  3000               	movlw	0
  1798  02AF  00FA               	movwf	avg@avg+3
  1799  02B0  3000               	movlw	0
  1800  02B1  00F9               	movwf	avg@avg+2
  1801  02B2  3000               	movlw	0
  1802  02B3  00F8               	movwf	avg@avg+1
  1803  02B4  3000               	movlw	0
  1804  02B5  00F7               	movwf	avg@avg
  1805                           
  1806                           ;main.c: 132: for(uint8_t i=0; i<8; i++){
  1807  02B6  01FC               	clrf	avg@i
  1808  02B7  3008               	movlw	8
  1809  02B8  027C               	subwf	avg@i,w
  1810  02B9  1803               	btfsc	3,0
  1811  02BA  2AD4               	goto	l821
  1812  02BB                     l815:	
  1813                           
  1814                           ;main.c: 133: avg += samples[i];
  1815  02BB  357C               	lslf	avg@i,w
  1816  02BC  077B               	addwf	avg@samples,w
  1817  02BD  00F3               	movwf	??_avg
  1818  02BE  0873               	movf	??_avg,w
  1819  02BF  0086               	movwf	6
  1820  02C0  0187               	clrf	7
  1821  02C1  3F40               	moviw [0]fsr1
  1822  02C2  00F4               	movwf	??_avg+1
  1823  02C3  3F41               	moviw [1]fsr1
  1824  02C4  00F5               	movwf	??_avg+2
  1825  02C5  0874               	movf	??_avg+1,w
  1826  02C6  07F7               	addwf	avg@avg,f
  1827  02C7  0875               	movf	??_avg+2,w
  1828  02C8  3DF8               	addwfc	avg@avg+1,f
  1829  02C9  3000               	movlw	0
  1830  02CA  3DF9               	addwfc	avg@avg+2,f
  1831  02CB  3DFA               	addwfc	avg@avg+3,f
  1832  02CC  3001               	movlw	1
  1833  02CD  00F3               	movwf	??_avg
  1834  02CE  0873               	movf	??_avg,w
  1835  02CF  07FC               	addwf	avg@i,f
  1836  02D0  3008               	movlw	8
  1837  02D1  027C               	subwf	avg@i,w
  1838  02D2  1C03               	skipc
  1839  02D3  2ABB               	goto	l815
  1840  02D4                     l821:	
  1841                           
  1842                           ;main.c: 134: }
  1843                           ;main.c: 135: return avg>>3;
  1844  02D4  0877               	movf	avg@avg,w
  1845  02D5  00F3               	movwf	??_avg
  1846  02D6  0878               	movf	avg@avg+1,w
  1847  02D7  00F4               	movwf	??_avg+1
  1848  02D8  0879               	movf	avg@avg+2,w
  1849  02D9  00F5               	movwf	??_avg+2
  1850  02DA  087A               	movf	avg@avg+3,w
  1851  02DB  00F6               	movwf	??_avg+3
  1852  02DC  3003               	movlw	3
  1853  02DD                     u645:	
  1854  02DD  36F6               	lsrf	??_avg+3,f
  1855  02DE  0CF5               	rrf	??_avg+2,f
  1856  02DF  0CF4               	rrf	??_avg+1,f
  1857  02E0  0CF3               	rrf	??_avg,f
  1858  02E1  0B89               	decfsz	9,f
  1859  02E2  2ADD               	goto	u645
  1860  02E3  0874               	movf	??_avg+1,w
  1861  02E4  00F2               	movwf	?_avg+1
  1862  02E5  0873               	movf	??_avg,w
  1863  02E6  00F1               	movwf	?_avg
  1864  02E7  0008               	return
  1865  02E8                     __end_of_avg:	
  1866                           
  1867                           	psect	text7
  1868  033A                     __ptext7:	
  1869 ;; *************** function ___lwtoft *****************
  1870 ;; Defined at:
  1871 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwtoft.c"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;  c               2    0[BANK0 ] unsigned int 
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;		None
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  3    0[BANK0 ] float 
  1878 ;; Registers used:
  1879 ;;		wreg, status,2, status,0, pclath, cstack
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMMON   BANK0   BANK1
  1885 ;;      Params:         0       3       0
  1886 ;;      Locals:         0       0       0
  1887 ;;      Temps:          0       1       0
  1888 ;;      Totals:         0       4       0
  1889 ;;Total ram usage:        4 bytes
  1890 ;; Hardware stack levels used:    1
  1891 ;; Hardware stack levels required when called:    2
  1892 ;; This function calls:
  1893 ;;		___ftpack
  1894 ;; This function is called by:
  1895 ;;		_main
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899                           
  1900                           ;psect for function ___lwtoft
  1901  033A                     ___lwtoft:	
  1902                           
  1903                           ;incstack = 0
  1904                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  1905  033A  0020               	movlb	0	; select bank0
  1906  033B  0820               	movf	___lwtoft@c,w
  1907  033C  00F1               	movwf	___ftpack@arg
  1908  033D  0821               	movf	___lwtoft@c+1,w
  1909  033E  00F2               	movwf	___ftpack@arg+1
  1910  033F  01F3               	clrf	___ftpack@arg+2
  1911  0340  308E               	movlw	142
  1912  0341  00A3               	movwf	??___lwtoft
  1913  0342  0823               	movf	??___lwtoft,w
  1914  0343  00F4               	movwf	___ftpack@exp
  1915  0344  01F5               	clrf	___ftpack@sign
  1916  0345  220D               	fcall	___ftpack
  1917  0346  0871               	movf	?___ftpack,w
  1918  0347  0020               	movlb	0	; select bank0
  1919  0348  00A0               	movwf	?___lwtoft
  1920  0349  0872               	movf	?___ftpack+1,w
  1921  034A  00A1               	movwf	?___lwtoft+1
  1922  034B  0873               	movf	?___ftpack+2,w
  1923  034C  00A2               	movwf	?___lwtoft+2
  1924  034D  0008               	return
  1925  034E                     __end_of___lwtoft:	
  1926                           
  1927                           	psect	text8
  1928  015A                     __ptext8:	
  1929 ;; *************** function ___ftmul *****************
  1930 ;; Defined at:
  1931 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;  f1              3    4[BANK0 ] float 
  1934 ;;  f2              3    7[BANK0 ] float 
  1935 ;; Auto vars:     Size  Location     Type
  1936 ;;  f3_as_produc    3   15[BANK0 ] unsigned um
  1937 ;;  sign            1   19[BANK0 ] unsigned char 
  1938 ;;  cntr            1   18[BANK0 ] unsigned char 
  1939 ;;  exp             1   14[BANK0 ] unsigned char 
  1940 ;; Return value:  Size  Location     Type
  1941 ;;                  3    4[BANK0 ] float 
  1942 ;; Registers used:
  1943 ;;		wreg, status,2, status,0, pclath, cstack
  1944 ;; Tracked objects:
  1945 ;;		On entry : 0/0
  1946 ;;		On exit  : 0/0
  1947 ;;		Unchanged: 0/0
  1948 ;; Data sizes:     COMMON   BANK0   BANK1
  1949 ;;      Params:         0       6       0
  1950 ;;      Locals:         0       6       0
  1951 ;;      Temps:          0       4       0
  1952 ;;      Totals:         0      16       0
  1953 ;;Total ram usage:       16 bytes
  1954 ;; Hardware stack levels used:    1
  1955 ;; Hardware stack levels required when called:    2
  1956 ;; This function calls:
  1957 ;;		___ftpack
  1958 ;; This function is called by:
  1959 ;;		_main
  1960 ;; This function uses a non-reentrant model
  1961 ;;
  1962                           
  1963                           
  1964                           ;psect for function ___ftmul
  1965  015A                     ___ftmul:	
  1966                           
  1967                           ;incstack = 0
  1968                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  1969  015A  0020               	movlb	0	; select bank0
  1970  015B  0824               	movf	___ftmul@f1,w
  1971  015C  00AA               	movwf	??___ftmul
  1972  015D  0825               	movf	___ftmul@f1+1,w
  1973  015E  00AB               	movwf	??___ftmul+1
  1974  015F  0826               	movf	___ftmul@f1+2,w
  1975  0160  00AC               	movwf	??___ftmul+2
  1976  0161  1003               	clrc
  1977  0162  0D2B               	rlf	??___ftmul+1,w
  1978  0163  0D2C               	rlf	??___ftmul+2,w
  1979  0164  00AD               	movwf	??___ftmul+3
  1980  0165  082D               	movf	??___ftmul+3,w
  1981  0166  00AE               	movwf	___ftmul@exp
  1982  0167  082E               	movf	___ftmul@exp,w
  1983  0168  1D03               	btfss	3,2
  1984  0169  2971               	goto	l851
  1985  016A  3000               	movlw	0
  1986  016B  00A4               	movwf	?___ftmul
  1987  016C  3000               	movlw	0
  1988  016D  00A5               	movwf	?___ftmul+1
  1989  016E  3000               	movlw	0
  1990  016F  00A6               	movwf	?___ftmul+2
  1991  0170  0008               	return
  1992  0171                     l851:	
  1993  0171  0827               	movf	___ftmul@f2,w
  1994  0172  00AA               	movwf	??___ftmul
  1995  0173  0828               	movf	___ftmul@f2+1,w
  1996  0174  00AB               	movwf	??___ftmul+1
  1997  0175  0829               	movf	___ftmul@f2+2,w
  1998  0176  00AC               	movwf	??___ftmul+2
  1999  0177  1003               	clrc
  2000  0178  0D2B               	rlf	??___ftmul+1,w
  2001  0179  0D2C               	rlf	??___ftmul+2,w
  2002  017A  00AD               	movwf	??___ftmul+3
  2003  017B  082D               	movf	??___ftmul+3,w
  2004  017C  00B3               	movwf	___ftmul@sign
  2005  017D  0833               	movf	___ftmul@sign,w
  2006  017E  1D03               	btfss	3,2
  2007  017F  2987               	goto	l857
  2008  0180  3000               	movlw	0
  2009  0181  00A4               	movwf	?___ftmul
  2010  0182  3000               	movlw	0
  2011  0183  00A5               	movwf	?___ftmul+1
  2012  0184  3000               	movlw	0
  2013  0185  00A6               	movwf	?___ftmul+2
  2014  0186  0008               	return
  2015  0187                     l857:	
  2016  0187  0833               	movf	___ftmul@sign,w
  2017  0188  3E7B               	addlw	123
  2018  0189  00AA               	movwf	??___ftmul
  2019  018A  082A               	movf	??___ftmul,w
  2020  018B  07AE               	addwf	___ftmul@exp,f
  2021  018C  0824               	movf	___ftmul@f1,w
  2022  018D  00AA               	movwf	??___ftmul
  2023  018E  0825               	movf	___ftmul@f1+1,w
  2024  018F  00AB               	movwf	??___ftmul+1
  2025  0190  0826               	movf	___ftmul@f1+2,w
  2026  0191  00AC               	movwf	??___ftmul+2
  2027  0192  3010               	movlw	16
  2028  0193                     u705:	
  2029  0193  36AC               	lsrf	??___ftmul+2,f
  2030  0194  0CAB               	rrf	??___ftmul+1,f
  2031  0195  0CAA               	rrf	??___ftmul,f
  2032  0196  0B89               	decfsz	9,f
  2033  0197  2993               	goto	u705
  2034  0198  082A               	movf	??___ftmul,w
  2035  0199  00AD               	movwf	??___ftmul+3
  2036  019A  082D               	movf	??___ftmul+3,w
  2037  019B  00B3               	movwf	___ftmul@sign
  2038  019C  0827               	movf	___ftmul@f2,w
  2039  019D  00AA               	movwf	??___ftmul
  2040  019E  0828               	movf	___ftmul@f2+1,w
  2041  019F  00AB               	movwf	??___ftmul+1
  2042  01A0  0829               	movf	___ftmul@f2+2,w
  2043  01A1  00AC               	movwf	??___ftmul+2
  2044  01A2  3010               	movlw	16
  2045  01A3                     u715:	
  2046  01A3  36AC               	lsrf	??___ftmul+2,f
  2047  01A4  0CAB               	rrf	??___ftmul+1,f
  2048  01A5  0CAA               	rrf	??___ftmul,f
  2049  01A6  0B89               	decfsz	9,f
  2050  01A7  29A3               	goto	u715
  2051  01A8  082A               	movf	??___ftmul,w
  2052  01A9  00AD               	movwf	??___ftmul+3
  2053  01AA  082D               	movf	??___ftmul+3,w
  2054  01AB  06B3               	xorwf	___ftmul@sign,f
  2055  01AC  3080               	movlw	128
  2056  01AD  00AA               	movwf	??___ftmul
  2057  01AE  082A               	movf	??___ftmul,w
  2058  01AF  05B3               	andwf	___ftmul@sign,f
  2059  01B0  17A5               	bsf	___ftmul@f1+1,7
  2060  01B1  17A8               	bsf	___ftmul@f2+1,7
  2061  01B2  30FF               	movlw	255
  2062  01B3  05A7               	andwf	___ftmul@f2,f
  2063  01B4  30FF               	movlw	255
  2064  01B5  05A8               	andwf	___ftmul@f2+1,f
  2065  01B6  3000               	movlw	0
  2066  01B7  05A9               	andwf	___ftmul@f2+2,f
  2067  01B8  3000               	movlw	0
  2068  01B9  00AF               	movwf	___ftmul@f3_as_product
  2069  01BA  3000               	movlw	0
  2070  01BB  00B0               	movwf	___ftmul@f3_as_product+1
  2071  01BC  3000               	movlw	0
  2072  01BD  00B1               	movwf	___ftmul@f3_as_product+2
  2073  01BE  3007               	movlw	7
  2074  01BF  00AA               	movwf	??___ftmul
  2075  01C0  082A               	movf	??___ftmul,w
  2076  01C1  00B2               	movwf	___ftmul@cntr
  2077  01C2                     l869:	
  2078  01C2  1C24               	btfss	___ftmul@f1,0
  2079  01C3  29CA               	goto	l873
  2080  01C4  0827               	movf	___ftmul@f2,w
  2081  01C5  07AF               	addwf	___ftmul@f3_as_product,f
  2082  01C6  0828               	movf	___ftmul@f2+1,w
  2083  01C7  3DB0               	addwfc	___ftmul@f3_as_product+1,f
  2084  01C8  0829               	movf	___ftmul@f2+2,w
  2085  01C9  3DB1               	addwfc	___ftmul@f3_as_product+2,f
  2086  01CA                     l873:	
  2087  01CA  3001               	movlw	1
  2088  01CB                     u735:	
  2089  01CB  36A6               	lsrf	___ftmul@f1+2,f
  2090  01CC  0CA5               	rrf	___ftmul@f1+1,f
  2091  01CD  0CA4               	rrf	___ftmul@f1,f
  2092  01CE  0B89               	decfsz	9,f
  2093  01CF  29CB               	goto	u735
  2094  01D0  3001               	movlw	1
  2095  01D1                     u745:	
  2096  01D1  35A7               	lslf	___ftmul@f2,f
  2097  01D2  0DA8               	rlf	___ftmul@f2+1,f
  2098  01D3  0DA9               	rlf	___ftmul@f2+2,f
  2099  01D4  0B89               	decfsz	9,f
  2100  01D5  29D1               	goto	u745
  2101  01D6  3001               	movlw	1
  2102  01D7  02B2               	subwf	___ftmul@cntr,f
  2103  01D8  1D03               	btfss	3,2
  2104  01D9  29C2               	goto	l869
  2105  01DA  3009               	movlw	9
  2106  01DB  00AA               	movwf	??___ftmul
  2107  01DC  082A               	movf	??___ftmul,w
  2108  01DD  00B2               	movwf	___ftmul@cntr
  2109  01DE                     l881:	
  2110  01DE  1C24               	btfss	___ftmul@f1,0
  2111  01DF  29E6               	goto	l885
  2112  01E0  0827               	movf	___ftmul@f2,w
  2113  01E1  07AF               	addwf	___ftmul@f3_as_product,f
  2114  01E2  0828               	movf	___ftmul@f2+1,w
  2115  01E3  3DB0               	addwfc	___ftmul@f3_as_product+1,f
  2116  01E4  0829               	movf	___ftmul@f2+2,w
  2117  01E5  3DB1               	addwfc	___ftmul@f3_as_product+2,f
  2118  01E6                     l885:	
  2119  01E6  3001               	movlw	1
  2120  01E7                     u775:	
  2121  01E7  36A6               	lsrf	___ftmul@f1+2,f
  2122  01E8  0CA5               	rrf	___ftmul@f1+1,f
  2123  01E9  0CA4               	rrf	___ftmul@f1,f
  2124  01EA  0B89               	decfsz	9,f
  2125  01EB  29E7               	goto	u775
  2126  01EC  3001               	movlw	1
  2127  01ED                     u785:	
  2128  01ED  36B1               	lsrf	___ftmul@f3_as_product+2,f
  2129  01EE  0CB0               	rrf	___ftmul@f3_as_product+1,f
  2130  01EF  0CAF               	rrf	___ftmul@f3_as_product,f
  2131  01F0  0B89               	decfsz	9,f
  2132  01F1  29ED               	goto	u785
  2133  01F2  3001               	movlw	1
  2134  01F3  02B2               	subwf	___ftmul@cntr,f
  2135  01F4  1D03               	btfss	3,2
  2136  01F5  29DE               	goto	l881
  2137  01F6  082F               	movf	___ftmul@f3_as_product,w
  2138  01F7  00F1               	movwf	___ftpack@arg
  2139  01F8  0830               	movf	___ftmul@f3_as_product+1,w
  2140  01F9  00F2               	movwf	___ftpack@arg+1
  2141  01FA  0831               	movf	___ftmul@f3_as_product+2,w
  2142  01FB  00F3               	movwf	___ftpack@arg+2
  2143  01FC  082E               	movf	___ftmul@exp,w
  2144  01FD  00AA               	movwf	??___ftmul
  2145  01FE  082A               	movf	??___ftmul,w
  2146  01FF  00F4               	movwf	___ftpack@exp
  2147  0200  0833               	movf	___ftmul@sign,w
  2148  0201  00AB               	movwf	??___ftmul+1
  2149  0202  082B               	movf	??___ftmul+1,w
  2150  0203  00F5               	movwf	___ftpack@sign
  2151  0204  220D               	fcall	___ftpack
  2152  0205  0871               	movf	?___ftpack,w
  2153  0206  0020               	movlb	0	; select bank0
  2154  0207  00A4               	movwf	?___ftmul
  2155  0208  0872               	movf	?___ftpack+1,w
  2156  0209  00A5               	movwf	?___ftmul+1
  2157  020A  0873               	movf	?___ftpack+2,w
  2158  020B  00A6               	movwf	?___ftmul+2
  2159  020C  0008               	return
  2160  020D                     __end_of___ftmul:	
  2161                           
  2162                           	psect	text9
  2163  020D                     __ptext9:	
  2164 ;; *************** function ___ftpack *****************
  2165 ;; Defined at:
  2166 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  2167 ;; Parameters:    Size  Location     Type
  2168 ;;  arg             3    1[COMMON] unsigned um
  2169 ;;  exp             1    4[COMMON] unsigned char 
  2170 ;;  sign            1    5[COMMON] unsigned char 
  2171 ;; Auto vars:     Size  Location     Type
  2172 ;;		None
  2173 ;; Return value:  Size  Location     Type
  2174 ;;                  3    1[COMMON] float 
  2175 ;; Registers used:
  2176 ;;		wreg, status,2, status,0
  2177 ;; Tracked objects:
  2178 ;;		On entry : 0/0
  2179 ;;		On exit  : 0/0
  2180 ;;		Unchanged: 0/0
  2181 ;; Data sizes:     COMMON   BANK0   BANK1
  2182 ;;      Params:         5       0       0
  2183 ;;      Locals:         0       0       0
  2184 ;;      Temps:          3       0       0
  2185 ;;      Totals:         8       0       0
  2186 ;;Total ram usage:        8 bytes
  2187 ;; Hardware stack levels used:    1
  2188 ;; Hardware stack levels required when called:    1
  2189 ;; This function calls:
  2190 ;;		Nothing
  2191 ;; This function is called by:
  2192 ;;		___ftmul
  2193 ;;		___lwtoft
  2194 ;; This function uses a non-reentrant model
  2195 ;;
  2196                           
  2197                           
  2198                           ;psect for function ___ftpack
  2199  020D                     ___ftpack:	
  2200                           
  2201                           ;incstack = 0
  2202                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2203  020D  0874               	movf	___ftpack@exp,w
  2204  020E  1903               	btfsc	3,2
  2205  020F  2A15               	goto	l741
  2206  0210  0873               	movf	___ftpack@arg+2,w
  2207  0211  0472               	iorwf	___ftpack@arg+1,w
  2208  0212  0471               	iorwf	___ftpack@arg,w
  2209  0213  1D03               	skipz
  2210  0214  2A26               	goto	l747
  2211  0215                     l741:	
  2212  0215  3000               	movlw	0
  2213  0216  00F1               	movwf	?___ftpack
  2214  0217  3000               	movlw	0
  2215  0218  00F2               	movwf	?___ftpack+1
  2216  0219  3000               	movlw	0
  2217  021A  00F3               	movwf	?___ftpack+2
  2218  021B  0008               	return
  2219  021C                     l745:	
  2220  021C  3001               	movlw	1
  2221  021D  00F6               	movwf	??___ftpack
  2222  021E  0876               	movf	??___ftpack,w
  2223  021F  07F4               	addwf	___ftpack@exp,f
  2224  0220  3001               	movlw	1
  2225  0221                     u475:	
  2226  0221  36F3               	lsrf	___ftpack@arg+2,f
  2227  0222  0CF2               	rrf	___ftpack@arg+1,f
  2228  0223  0CF1               	rrf	___ftpack@arg,f
  2229  0224  0B89               	decfsz	9,f
  2230  0225  2A21               	goto	u475
  2231  0226                     l747:	
  2232  0226  30FE               	movlw	254
  2233  0227  0573               	andwf	___ftpack@arg+2,w
  2234  0228  1903               	btfsc	3,2
  2235  0229  2A3F               	goto	l276
  2236  022A  2A1C               	goto	l745
  2237  022B                     l749:	
  2238  022B  3001               	movlw	1
  2239  022C  00F6               	movwf	??___ftpack
  2240  022D  0876               	movf	??___ftpack,w
  2241  022E  07F4               	addwf	___ftpack@exp,f
  2242  022F  3001               	movlw	1
  2243  0230  07F1               	addwf	___ftpack@arg,f
  2244  0231  3000               	movlw	0
  2245  0232  1803               	skipnc
  2246  0233  3001               	movlw	1
  2247  0234  07F2               	addwf	___ftpack@arg+1,f
  2248  0235  3000               	movlw	0
  2249  0236  1803               	skipnc
  2250  0237  3001               	movlw	1
  2251  0238  07F3               	addwf	___ftpack@arg+2,f
  2252  0239  3001               	movlw	1
  2253  023A                     u495:	
  2254  023A  36F3               	lsrf	___ftpack@arg+2,f
  2255  023B  0CF2               	rrf	___ftpack@arg+1,f
  2256  023C  0CF1               	rrf	___ftpack@arg,f
  2257  023D  0B89               	decfsz	9,f
  2258  023E  2A3A               	goto	u495
  2259  023F                     l276:	
  2260  023F  30FF               	movlw	255
  2261  0240  0573               	andwf	___ftpack@arg+2,w
  2262  0241  1903               	btfsc	3,2
  2263  0242  2A4C               	goto	l757
  2264  0243  2A2B               	goto	l749
  2265  0244                     l755:	
  2266  0244  3001               	movlw	1
  2267  0245  02F4               	subwf	___ftpack@exp,f
  2268  0246  3001               	movlw	1
  2269  0247                     u515:	
  2270  0247  35F1               	lslf	___ftpack@arg,f
  2271  0248  0DF2               	rlf	___ftpack@arg+1,f
  2272  0249  0DF3               	rlf	___ftpack@arg+2,f
  2273  024A  0B89               	decfsz	9,f
  2274  024B  2A47               	goto	u515
  2275  024C                     l757:	
  2276  024C  1BF2               	btfsc	___ftpack@arg+1,7
  2277  024D  2A52               	goto	l283
  2278  024E  3002               	movlw	2
  2279  024F  0274               	subwf	___ftpack@exp,w
  2280  0250  1803               	skipnc
  2281  0251  2A44               	goto	l755
  2282  0252                     l283:	
  2283  0252  1874               	btfsc	___ftpack@exp,0
  2284  0253  2A5A               	goto	l284
  2285  0254  30FF               	movlw	255
  2286  0255  05F1               	andwf	___ftpack@arg,f
  2287  0256  307F               	movlw	127
  2288  0257  05F2               	andwf	___ftpack@arg+1,f
  2289  0258  30FF               	movlw	255
  2290  0259  05F3               	andwf	___ftpack@arg+2,f
  2291  025A                     l284:	
  2292  025A  1003               	clrc
  2293  025B  0CF4               	rrf	___ftpack@exp,f
  2294  025C  0874               	movf	___ftpack@exp,w
  2295  025D  00F6               	movwf	??___ftpack
  2296  025E  01F7               	clrf	??___ftpack+1
  2297  025F  01F8               	clrf	??___ftpack+2
  2298  0260  3010               	movlw	16
  2299  0261                     u555:	
  2300  0261  35F6               	lslf	??___ftpack,f
  2301  0262  0DF7               	rlf	??___ftpack+1,f
  2302  0263  0DF8               	rlf	??___ftpack+2,f
  2303  0264  0B89               	decfsz	9,f
  2304  0265  2A61               	goto	u555
  2305  0266  0876               	movf	??___ftpack,w
  2306  0267  04F1               	iorwf	___ftpack@arg,f
  2307  0268  0877               	movf	??___ftpack+1,w
  2308  0269  04F2               	iorwf	___ftpack@arg+1,f
  2309  026A  0878               	movf	??___ftpack+2,w
  2310  026B  04F3               	iorwf	___ftpack@arg+2,f
  2311  026C  0875               	movf	___ftpack@sign,w
  2312  026D  1903               	btfsc	3,2
  2313  026E  0008               	return
  2314  026F  17F3               	bsf	___ftpack@arg+2,7
  2315  0270  0008               	return
  2316  0271                     __end_of___ftpack:	
  2317                           
  2318                           	psect	text10
  2319  0271                     __ptext10:	
  2320 ;; *************** function ___ftge *****************
  2321 ;; Defined at:
  2322 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  2323 ;; Parameters:    Size  Location     Type
  2324 ;;  ff1             3   20[BANK0 ] float 
  2325 ;;  ff2             3   23[BANK0 ] float 
  2326 ;; Auto vars:     Size  Location     Type
  2327 ;;		None
  2328 ;; Return value:  Size  Location     Type
  2329 ;;		None               void
  2330 ;; Registers used:
  2331 ;;		wreg, status,2, status,0
  2332 ;; Tracked objects:
  2333 ;;		On entry : 0/0
  2334 ;;		On exit  : 0/0
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMMON   BANK0   BANK1
  2337 ;;      Params:         0       6       0
  2338 ;;      Locals:         0       0       0
  2339 ;;      Temps:          0       3       0
  2340 ;;      Totals:         0       9       0
  2341 ;;Total ram usage:        9 bytes
  2342 ;; Hardware stack levels used:    1
  2343 ;; Hardware stack levels required when called:    1
  2344 ;; This function calls:
  2345 ;;		Nothing
  2346 ;; This function is called by:
  2347 ;;		_main
  2348 ;; This function uses a non-reentrant model
  2349 ;;
  2350                           
  2351                           
  2352                           ;psect for function ___ftge
  2353  0271                     ___ftge:	
  2354                           
  2355                           ;incstack = 0
  2356                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  2357  0271  0020               	movlb	0	; select bank0
  2358  0272  1FB6               	btfss	___ftge@ff1+2,7
  2359  0273  2A88               	goto	l829
  2360  0274  0934               	comf	___ftge@ff1,w
  2361  0275  00BA               	movwf	??___ftge
  2362  0276  0935               	comf	___ftge@ff1+1,w
  2363  0277  00BB               	movwf	??___ftge+1
  2364  0278  0936               	comf	___ftge@ff1+2,w
  2365  0279  00BC               	movwf	??___ftge+2
  2366  027A  0ABA               	incf	??___ftge,f
  2367  027B  1903               	skipnz
  2368  027C  0ABB               	incf	??___ftge+1,f
  2369  027D  1903               	skipnz
  2370  027E  0ABC               	incf	??___ftge+2,f
  2371  027F  3000               	movlw	0
  2372  0280  073A               	addwf	??___ftge,w
  2373  0281  00B4               	movwf	___ftge@ff1
  2374  0282  3000               	movlw	0
  2375  0283  3D3B               	addwfc	??___ftge+1,w
  2376  0284  00B5               	movwf	___ftge@ff1+1
  2377  0285  3080               	movlw	128
  2378  0286  3D3C               	addwfc	??___ftge+2,w
  2379  0287  00B6               	movwf	___ftge@ff1+2
  2380  0288                     l829:	
  2381  0288  1FB9               	btfss	___ftge@ff2+2,7
  2382  0289  2A9E               	goto	l833
  2383  028A  0937               	comf	___ftge@ff2,w
  2384  028B  00BA               	movwf	??___ftge
  2385  028C  0938               	comf	___ftge@ff2+1,w
  2386  028D  00BB               	movwf	??___ftge+1
  2387  028E  0939               	comf	___ftge@ff2+2,w
  2388  028F  00BC               	movwf	??___ftge+2
  2389  0290  0ABA               	incf	??___ftge,f
  2390  0291  1903               	skipnz
  2391  0292  0ABB               	incf	??___ftge+1,f
  2392  0293  1903               	skipnz
  2393  0294  0ABC               	incf	??___ftge+2,f
  2394  0295  3000               	movlw	0
  2395  0296  073A               	addwf	??___ftge,w
  2396  0297  00B7               	movwf	___ftge@ff2
  2397  0298  3000               	movlw	0
  2398  0299  3D3B               	addwfc	??___ftge+1,w
  2399  029A  00B8               	movwf	___ftge@ff2+1
  2400  029B  3080               	movlw	128
  2401  029C  3D3C               	addwfc	??___ftge+2,w
  2402  029D  00B9               	movwf	___ftge@ff2+2
  2403  029E                     l833:	
  2404  029E  3080               	movlw	128
  2405  029F  06B6               	xorwf	___ftge@ff1+2,f
  2406  02A0  3080               	movlw	128
  2407  02A1  06B9               	xorwf	___ftge@ff2+2,f
  2408  02A2  0839               	movf	___ftge@ff2+2,w
  2409  02A3  0236               	subwf	___ftge@ff1+2,w
  2410  02A4  1D03               	skipz
  2411  02A5  0008               	return
  2412  02A6  0838               	movf	___ftge@ff2+1,w
  2413  02A7  0235               	subwf	___ftge@ff1+1,w
  2414  02A8  1D03               	skipz
  2415  02A9  0008               	return
  2416  02AA  0837               	movf	___ftge@ff2,w
  2417  02AB  0234               	subwf	___ftge@ff1,w
  2418  02AC  0008               	return
  2419  02AD                     __end_of___ftge:	
  2420                           
  2421                           	psect	text11
  2422  035B                     __ptext11:	
  2423 ;; *************** function _InitNCO *****************
  2424 ;; Defined at:
  2425 ;;		line 163 in file "main.c"
  2426 ;; Parameters:    Size  Location     Type
  2427 ;;		None
  2428 ;; Auto vars:     Size  Location     Type
  2429 ;;		None
  2430 ;; Return value:  Size  Location     Type
  2431 ;;                  1    wreg      void 
  2432 ;; Registers used:
  2433 ;;		wreg, status,2, status,0
  2434 ;; Tracked objects:
  2435 ;;		On entry : 0/0
  2436 ;;		On exit  : 0/0
  2437 ;;		Unchanged: 0/0
  2438 ;; Data sizes:     COMMON   BANK0   BANK1
  2439 ;;      Params:         0       0       0
  2440 ;;      Locals:         0       0       0
  2441 ;;      Temps:          1       0       0
  2442 ;;      Totals:         1       0       0
  2443 ;;Total ram usage:        1 bytes
  2444 ;; Hardware stack levels used:    1
  2445 ;; Hardware stack levels required when called:    1
  2446 ;; This function calls:
  2447 ;;		Nothing
  2448 ;; This function is called by:
  2449 ;;		_main
  2450 ;; This function uses a non-reentrant model
  2451 ;;
  2452                           
  2453                           
  2454                           ;psect for function _InitNCO
  2455  035B                     _InitNCO:	
  2456                           
  2457                           ;main.c: 164: APFCON |= 0b1;
  2458                           
  2459                           ;incstack = 0
  2460                           ; Regs used in _InitNCO: [wreg+status,2+status,0]
  2461  035B  0022               	movlb	2	; select bank2
  2462  035C  141D               	bsf	29,0	;volatile
  2463                           
  2464                           ;main.c: 166: INTCON |= 0b11000000;
  2465  035D  30C0               	movlw	192
  2466  035E  00F1               	movwf	??_InitNCO
  2467  035F  0871               	movf	??_InitNCO,w
  2468  0360  048B               	iorwf	11,f	;volatile
  2469                           
  2470                           ;main.c: 168: NCO1CON = 0b11001110;
  2471  0361  30CE               	movlw	206
  2472  0362  0029               	movlb	9	; select bank9
  2473  0363  009E               	movwf	30	;volatile
  2474                           
  2475                           ;main.c: 169: NCO1CLK = 0b00;
  2476  0364  019F               	clrf	31	;volatile
  2477  0365  0008               	return
  2478  0366                     __end_of_InitNCO:	
  2479                           
  2480                           	psect	text12
  2481  02E8                     __ptext12:	
  2482 ;; *************** function _InitApp *****************
  2483 ;; Defined at:
  2484 ;;		line 27 in file "user.c"
  2485 ;; Parameters:    Size  Location     Type
  2486 ;;		None
  2487 ;; Auto vars:     Size  Location     Type
  2488 ;;		None
  2489 ;; Return value:  Size  Location     Type
  2490 ;;                  1    wreg      void 
  2491 ;; Registers used:
  2492 ;;		wreg, status,2, status,0
  2493 ;; Tracked objects:
  2494 ;;		On entry : 0/0
  2495 ;;		On exit  : 0/0
  2496 ;;		Unchanged: 0/0
  2497 ;; Data sizes:     COMMON   BANK0   BANK1
  2498 ;;      Params:         0       0       0
  2499 ;;      Locals:         0       0       0
  2500 ;;      Temps:          1       0       0
  2501 ;;      Totals:         1       0       0
  2502 ;;Total ram usage:        1 bytes
  2503 ;; Hardware stack levels used:    1
  2504 ;; Hardware stack levels required when called:    1
  2505 ;; This function calls:
  2506 ;;		Nothing
  2507 ;; This function is called by:
  2508 ;;		_main
  2509 ;; This function uses a non-reentrant model
  2510 ;;
  2511                           
  2512                           
  2513                           ;psect for function _InitApp
  2514  02E8                     _InitApp:	
  2515                           
  2516                           ;user.c: 30: TRISA = ~(~TRISC | 0b010000);
  2517                           
  2518                           ;incstack = 0
  2519                           ; Regs used in _InitApp: [wreg+status,2+status,0]
  2520  02E8  0021               	movlb	1	; select bank1
  2521  02E9  090E               	comf	14,w	;volatile
  2522  02EA  3810               	iorlw	16
  2523  02EB  3AFF               	xorlw	255
  2524  02EC  008C               	movwf	12	;volatile
  2525                           
  2526                           ;user.c: 31: TRISC = ~(~TRISC | 0b110000);
  2527  02ED  090E               	comf	14,w	;volatile
  2528  02EE  3830               	iorlw	48
  2529  02EF  3AFF               	xorlw	255
  2530  02F0  008E               	movwf	14	;volatile
  2531                           
  2532                           ;user.c: 33: RC4 = 1;
  2533  02F1  0020               	movlb	0	; select bank0
  2534  02F2  160E               	bsf	14,4	;volatile
  2535                           
  2536                           ;user.c: 35: TRISA |= 0b110;
  2537  02F3  3006               	movlw	6
  2538  02F4  00F1               	movwf	??_InitApp
  2539  02F5  0871               	movf	??_InitApp,w
  2540  02F6  0021               	movlb	1	; select bank1
  2541  02F7  048C               	iorwf	12,f	;volatile
  2542                           
  2543                           ;user.c: 36: ANSELA |= 0b110;
  2544  02F8  3006               	movlw	6
  2545  02F9  00F1               	movwf	??_InitApp
  2546  02FA  0871               	movf	??_InitApp,w
  2547  02FB  0023               	movlb	3	; select bank3
  2548  02FC  048C               	iorwf	12,f	;volatile
  2549                           
  2550                           ;user.c: 38: TRISC |= 0b1100;
  2551  02FD  300C               	movlw	12
  2552  02FE  00F1               	movwf	??_InitApp
  2553  02FF  0871               	movf	??_InitApp,w
  2554  0300  0021               	movlb	1	; select bank1
  2555  0301  048E               	iorwf	14,f	;volatile
  2556                           
  2557                           ;user.c: 39: ANSELC |= 0b1100;
  2558  0302  300C               	movlw	12
  2559  0303  00F1               	movwf	??_InitApp
  2560  0304  0871               	movf	??_InitApp,w
  2561  0305  0023               	movlb	3	; select bank3
  2562  0306  048E               	iorwf	14,f	;volatile
  2563  0307  0008               	return
  2564  0308                     __end_of_InitApp:	
  2565                           
  2566                           	psect	text13
  2567  0376                     __ptext13:	
  2568 ;; *************** function _ConfigureOscillator *****************
  2569 ;; Defined at:
  2570 ;;		line 18 in file "system.c"
  2571 ;; Parameters:    Size  Location     Type
  2572 ;;		None
  2573 ;; Auto vars:     Size  Location     Type
  2574 ;;		None
  2575 ;; Return value:  Size  Location     Type
  2576 ;;                  1    wreg      void 
  2577 ;; Registers used:
  2578 ;;		None
  2579 ;; Tracked objects:
  2580 ;;		On entry : 0/0
  2581 ;;		On exit  : 0/0
  2582 ;;		Unchanged: 0/0
  2583 ;; Data sizes:     COMMON   BANK0   BANK1
  2584 ;;      Params:         0       0       0
  2585 ;;      Locals:         0       0       0
  2586 ;;      Temps:          0       0       0
  2587 ;;      Totals:         0       0       0
  2588 ;;Total ram usage:        0 bytes
  2589 ;; Hardware stack levels used:    1
  2590 ;; Hardware stack levels required when called:    1
  2591 ;; This function calls:
  2592 ;;		Nothing
  2593 ;; This function is called by:
  2594 ;;		_main
  2595 ;; This function uses a non-reentrant model
  2596 ;;
  2597                           
  2598                           
  2599                           ;psect for function _ConfigureOscillator
  2600  0376                     _ConfigureOscillator:	
  2601                           
  2602                           ;incstack = 0
  2603                           ; Regs used in _ConfigureOscillator: []
  2604  0376  0008               	return
  2605  0377                     __end_of_ConfigureOscillator:	
  2606                           
  2607                           	psect	intentry
  2608  0004                     __pintentry:	
  2609 ;; *************** function _isr *****************
  2610 ;; Defined at:
  2611 ;;		line 23 in file "interrupts.c"
  2612 ;; Parameters:    Size  Location     Type
  2613 ;;		None
  2614 ;; Auto vars:     Size  Location     Type
  2615 ;;		None
  2616 ;; Return value:  Size  Location     Type
  2617 ;;                  1    wreg      void 
  2618 ;; Registers used:
  2619 ;;		None
  2620 ;; Tracked objects:
  2621 ;;		On entry : 0/0
  2622 ;;		On exit  : 0/0
  2623 ;;		Unchanged: 0/0
  2624 ;; Data sizes:     COMMON   BANK0   BANK1
  2625 ;;      Params:         0       0       0
  2626 ;;      Locals:         0       0       0
  2627 ;;      Temps:          1       0       0
  2628 ;;      Totals:         1       0       0
  2629 ;;Total ram usage:        1 bytes
  2630 ;; Hardware stack levels used:    1
  2631 ;; This function calls:
  2632 ;;		Nothing
  2633 ;; This function is called by:
  2634 ;;		Interrupt level 1
  2635 ;; This function uses a non-reentrant model
  2636 ;;
  2637                           
  2638  0004                     _isr:	
  2639                           
  2640                           ;incstack = 0
  2641  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2642                           
  2643                           ; Regs used in _isr: []
  2644  0005  3180               	pagesel	$
  2645  0006  0020               	movlb	0	; select bank0
  2646  0007  087F               	movf	127,w
  2647  0008  00F0               	movwf	??_isr
  2648  0009  0870               	movf	??_isr,w
  2649  000A  00FF               	movwf	127
  2650  000B  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2651  000C  0009               	retfie
  2652  000D                     __end_of_isr:	
  2653  007E                     btemp	set	126	;btemp
  2654  007E                     int$flags	set	126
  2655  007E                     wtemp	set	126
  2656  007E                     wtemp0	set	126
  2657  0080                     wtemp1	set	128
  2658  0082                     wtemp2	set	130
  2659  0084                     wtemp3	set	132
  2660  0086                     wtemp4	set	134
  2661  0088                     wtemp5	set	136
  2662  007F                     wtemp6	set	127
  2663  007E                     ttemp	set	126
  2664  007E                     ttemp0	set	126
  2665  0081                     ttemp1	set	129
  2666  0084                     ttemp2	set	132
  2667  0087                     ttemp3	set	135
  2668  007F                     ttemp4	set	127
  2669  007E                     ltemp	set	126
  2670  007E                     ltemp0	set	126
  2671  0082                     ltemp1	set	130
  2672  0086                     ltemp2	set	134
  2673  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     43      76
    BANK1            32      0       0

Pointer List with Targets:

    avg@samples	PTR unsigned int  size(1) Largest target is 16
		 -> iin_samples(BANK0[16]), vin_samples(BANK0[16]), 


Critical Paths under _main in COMMON

    _main->_avg
    ___lwtoft->_avg
    ___ftmul->_avg
    ___ftge->_avg

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___ftge
    ___ftmul->___lwtoft
    ___ftge->___ftmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0    4696
                                             29 BANK0     14    14      0
                _ConfigureOscillator
                            _InitApp
                            _InitNCO
                             ___ftge
                            ___ftmul
                           ___lwtoft
                                _avg
                        _completeADC
                       _configureADC
                         _convertADC
                       _getResultADC
                          _selectADC
 ---------------------------------------------------------------------------------
 (1) _selectADC                                            3     3      0      23
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _getResultADC                                         9     7      2       0
                                              1 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) _convertADC                                           1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _configureADC                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _completeADC                                          1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _avg                                                 12    10      2     168
                                              1 COMMON    12    10      2
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    1863
                                              0 BANK0      4     1      3
                           ___ftpack
                                _avg (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             16    10      6    2167
                                              4 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
                                _avg (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1629
                                              1 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___ftge                                               9     3      6     242
                                             20 BANK0      9     3      6
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
                                _avg (ARG)
 ---------------------------------------------------------------------------------
 (1) _InitNCO                                              1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   _InitNCO
   ___ftge
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
         _avg (ARG)
       _avg (ARG)
     ___lwtoft (ARG)
       ___ftpack
       _avg (ARG)
     _avg (ARG)
   ___ftmul
     ___ftpack
     ___lwtoft (ARG)
       ___ftpack
       _avg (ARG)
     _avg (ARG)
   ___lwtoft
     ___ftpack
     _avg (ARG)
   _avg
   _completeADC
   _configureADC
   _convertADC
   _getResultADC
   _selectADC

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      59       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     2B      4C       6       95.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      59       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sun Sep 25 08:16:17 2016

              ??_getResultADC 0073                 ?_configureADC 0070                   __CFG_CP$OFF 0000  
                          l54 0048                            l63 00EF                  ?_completeADC 0070  
                 __CFG_LVP$ON 0000                           l283 0252                           l284 025A  
                         l276 023F                           l741 0215                           l821 02D4  
                         l815 02BB                           l833 029E                           l745 021C  
                         l755 0244                           l747 0226                           l851 0171  
                         l923 0053                           l829 0288                           l757 024C  
                         l749 022B                           l925 0056                           l951 0118  
                         l943 00DF                           l881 01DE                           l873 01CA  
                         l857 0187                           l953 0120                           l945 00E7  
                         l929 0063                           l937 0075                           l885 01E6  
                         l869 01C2                           l949 010F                           _RC4 0074  
                         _RC5 0075                           u515 0247                           u615 030C  
                         u705 0193                           u555 0261                           u475 0221  
                         u715 01A3                           u645 02DD                           u590 0359  
                         u574 0333                           u495 023A                           u735 01CB  
                         u575 0332                           u745 01D1                           u585 0352  
                         u907 0034                           u917 0154                           u775 01E7  
                         u785 01ED                           u885 0142                           u897 0025  
                         _avg 02AD                           _isr 0004                  __CFG_BORV$LO 0000  
                         wreg 0009                   main@curFreq 0047                          ?_avg 0071  
                        ?_isr 0070                  __CFG_WDTE$ON 0000                  __CFG_WRT$OFF 0000  
                        _main 0017                  ___ftpack@arg 0071                          avg@i 007C  
                ___ftpack@exp 0074                          fsr0h 0005                          fsr1h 0007  
                        fsr0l 0004                          indf0 0000                          fsr1l 0006  
                        btemp 007E                 __CFG_BOREN$ON 0000                          ltemp 007E  
                        start 000D                          ttemp 007E                          wtemp 007E  
              ??_configureADC 0071                 __CFG_MCLRE$ON 0000                  ___ftmul@cntr 0032  
                ___ftmul@sign 0033               __end_of_InitNCO 0366               __end_of_InitApp 0308  
                       ??_avg 0073                         ??_isr 0070                         ?_main 0070  
             __end_of___ftmul 020D                         _TRISA 008C                         _TRISC 008E  
         _ConfigureOscillator 0376                 ___ftpack@sign 0075                         main@i 0046  
                       ltemp0 007E                         ltemp1 0082                         ltemp2 0086  
                       ltemp3 0080                         ttemp0 007E                         ttemp1 0081  
                       ttemp2 0084                         ttemp3 0087                         ttemp4 007F  
                       status 0003                         wtemp0 007E                         wtemp1 0080  
                       wtemp2 0082                         wtemp3 0084                         wtemp4 0086  
                       wtemp5 0088                         wtemp6 007F          ?_ConfigureOscillator 0070  
             __initialization 000E                  __end_of_main 015A                __CFG_LPBOR$OFF 0000  
                      ??_main 003D              selectADC@channel 0073                        _ADCON0 009D  
                      _ADCON1 009E          __end_of_getResultADC 0324                        _ADRESH 009C  
                      _ADRESL 009B                        _APFCON 011D                        _ANSELA 018C  
                      _ANSELC 018E              __end_of___ftpack 0271                        _INTCON 000B  
            __end_of___lwtoft 034E                     ??_InitNCO 0071                     ??_InitApp 0071  
       ??_ConfigureOscillator 0071                __CFG_PWRTE$OFF 0000                        ___ftge 0271  
              __CFG_STVREN$ON 0000                     ??___ftmul 002A                        avg@avg 0077  
       ___ftmul@f3_as_product 002F          __size_of_completeADC 000D                _sample_pointer 004B  
        __end_of_configureADC 0376       __end_of__initialization 0014                    ___ftge@ff1 0034  
                  ___ftge@ff2 0037                    ___ftmul@f1 0024                    ___ftmul@f2 0027  
              __pcstackCOMMON 0070                    ___lwtoft@c 0020                    __pbssBANK0 004B  
                  __pmaintext 0017                       ?___ftge 0034            __size_of_selectADC 0016  
                  __pintentry 0004                     ?___ftpack 0071                     ?___lwtoft 0020  
                     _NCO1CLK 049F                       _NCO1CON 049E         __size_of_getResultADC 001C  
                  _convertADC 036C                       _InitNCO 035B                       _InitApp 02E8  
             __size_of___ftge 003C                  _getResultADC 0308                       ___ftmul 015A  
                  ??___ftpack 0076                       __ptext1 0324                       __ptext2 0308  
                     __ptext3 036C                       __ptext4 0372                       __ptext5 034E  
                     __ptext6 02AD                       __ptext7 033A                       __ptext8 015A  
                     __ptext9 020D                    ??___lwtoft 0023         __size_of_configureADC 0004  
                __size_of_avg 003B                  __size_of_isr 0009                       clrloop0 0367  
                  avg@samples 007B             __end_of_selectADC 033A          end_of_initialization 0014  
                _configureADC 0372              __CFG_FOSC$INTOSC 0000   __end_of_ConfigureOscillator 0377  
                 ?_convertADC 0070                   ___ftmul@exp 002E                __end_of___ftge 02AD  
               ??_completeADC 0071           start_initialization 000E                   __end_of_avg 02E8  
                 __end_of_isr 000D                      ??___ftge 003A           __size_of_convertADC 0006  
           __size_of___ftpack 0064                     ___latbits 0000             __size_of___lwtoft 0014  
               __pcstackBANK0 0020           __end_of_completeADC 035B                      ?_InitNCO 0070  
                    ?_InitApp 0070                      ?___ftmul 0024                      _NCO1INCH 049C  
                    _NCO1INCL 049B                     _selectADC 0324                     clear_ram0 0366  
                 _completeADC 034E                     main@curPI 0044                     main@curPV 0042  
                 _iin_samples 004C                  ??_convertADC 0071                    ?_selectADC 0070  
            __size_of_InitNCO 000B              __size_of_InitApp 0020              __size_of___ftmul 00B3  
                    ___ftpack 020D                      ___lwtoft 033A            __end_of_convertADC 0372  
                    __ptext10 0271                      __ptext11 035B                      __ptext12 02E8  
                    __ptext13 0376                 __size_of_main 0143  __size_of_ConfigureOscillator 0001  
                    int$flags 007E                      intlevel1 0000                   ??_selectADC 0071  
           __CFG_CLKOUTEN$OFF 0000                 ?_getResultADC 0071                   _vin_samples 005C  
